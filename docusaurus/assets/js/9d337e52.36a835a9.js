"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9935],{17928:(e,t,n)=>{n.r(t),n.d(t,{ScenarioComponent:()=>u,assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var s=n(85893),i=n(11151),r=n(3623),o=n(63079);const l={sidebar_position:40},a='Writing scenarios in "BDD language"',d={id:"tests-are-demo/old2/scenarios-bdd",title:'Writing scenarios in "BDD language"',description:"GIVEN, WHEN, THEN, AND ...",source:"@site/docs/tests-are-demo/old2/scenarios-bdd.md",sourceDirName:"tests-are-demo/old2",slug:"/tests-are-demo/old2/scenarios-bdd",permalink:"/docusaurus/docs/tests-are-demo/old2/scenarios-bdd",draft:!1,unlisted:!1,editUrl:"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/blob/master/docusaurus/docs/tests-are-demo/old2/scenarios-bdd.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"older-doc-will-be-migrated",permalink:"/docusaurus/docs/tests-are-demo/old/older-doc-will-be-migrated"},next:{title:"Featurebook (beta)",permalink:"/docusaurus/docs/tests-are-demo/old2/Featurebook"}},c={},h=[{value:"GIVEN, WHEN, THEN, AND ...",id:"given-when-then-and-",level:2},{value:"Guidelines to write &quot;nice&quot; scenarios",id:"guidelines-to-write-nice-scenarios",level:2},{value:"If there are about 2 lines of text =&gt; split",id:"if-there-are-about-2-lines-of-text--split",level:3},{value:"If there is a long text =&gt; bullets",id:"if-there-is-a-long-text--bullets",level:3},{value:"Consecutive scenarios",id:"consecutive-scenarios",level:3},{value:"Details / Comments 1",id:"details--comments-1",level:3},{value:"Details / Comments 2",id:"details--comments-2",level:3},{value:"Details / Comments 3",id:"details--comments-3",level:3},{value:"RENDER TEST",id:"render-test",level:3},{value:"Hierarchic / tree-like tests",id:"hierarchic--tree-like-tests",level:3},{value:"FEATURES W/O TESTS",id:"features-wo-tests",level:3},{value:"Comparing with Cucumber",id:"comparing-with-cucumber",level:2}],u=e=>{const t={br:"br",div:"div",...(0,i.a)()};return(0,s.jsxs)(t.div,{children:[(0,s.jsx)(r.Z,{as:"h3",attached:"top",block:!0,children:e.title}),e.children&&(0,s.jsx)(o.Z,{attached:!0,children:e.children}),(0,s.jsx)(t.br,{})]})};function m(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"writing-scenarios-in-bdd-language",children:'Writing scenarios in "BDD language"'}),"\n",(0,s.jsx)(t.h2,{id:"given-when-then-and-",children:"GIVEN, WHEN, THEN, AND ..."}),"\n","\n","\n","\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://cucumber.io/",children:"Cucumber"})," is a testing technology for Behavior-Driven-Development (BDD). We used it in the past extensively. We try to achieve many of the goals that they are evangelizing, but:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"with more lever tools,"}),"\n",(0,s.jsx)(t.li,{children:"with less work,"}),"\n",(0,s.jsx)(t.li,{children:"dual usage of the work that we do: for testing, for demo-ing."}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["In BDD, we use the keywords: ",(0,s.jsx)(t.code,{children:"GIVEN"}),", ",(0,s.jsx)(t.code,{children:"WHEN"}),", ",(0,s.jsx)(t.code,{children:"THEN"}),", ",(0,s.jsx)(t.code,{children:"AND"}),". A scenario is a sequence of such statemens:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"GIVEN <some existing context/state>, WHEN <some action is performed>, THEN <we should have the result/state>\n"})}),"\n",(0,s.jsx)(t.p,{children:"A pseudocode example for TAD tests:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"/**\n * ... THEN the screen containing the credit card form is shown\n * \n * Some more details ...\n */\n@Scenario(\"GIVEN a shopping cart w/ some articles, WHEN click on 'Place order', ...\")\nwhenClickBuy() {\n  // GIVEN\n  manager.setCurrentCart({\n    items: [ \n      { id: 123, label: \"Bluetooth keyboard ...\", price: 46.99, ... }, \n      { id: 124, label: \"Stereo computer speakers ...\", price: 23.49, ... } ]\n  });\n  ...\n\n  // WHEN\n  userEvent.click(screen.getByText('Place order'));\n\n  // THEN\n  assertNotNull(screen.getByTest('Please enter your card number:'));\n  ...\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Observe that the ",(0,s.jsx)(t.strong,{children:"keywords"})," are repeated in the code. They point to the scenario, so no need to copy/paste more. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(t.admonition,{title:"Convention for uniformity / consistency",type:"caution",children:(0,s.jsxs)(t.p,{children:["For the scenario, please respect the casing (e.g. ",(0,s.jsx)(t.code,{children:"WHEN"})," and not ",(0,s.jsx)(t.code,{children:"When"})," or ",(0,s.jsx)(t.code,{children:"when"}),"), and the comma (",(0,s.jsx)(t.code,{children:","}),") + space before the key words (e.g. ",(0,s.jsx)(t.code,{children:"... something, THEN something else"}),").",(0,s.jsx)("br",{}),"\nIdem for the comments: stick to ",(0,s.jsx)(t.code,{children:"// KEYWORD"}),". Avoid variations such as: ",(0,s.jsx)(t.code,{children:"// keyword"}),", ",(0,s.jsx)(t.code,{children:"// Keyword"}),", ",(0,s.jsx)(t.code,{children:"//KEYWORD"}),", etc."]})}),"\n",(0,s.jsx)(t.p,{children:"The blocks should contain:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"GIVEN"}),(0,s.jsx)(t.th,{children:"WHEN"}),(0,s.jsx)(t.th,{children:"THEN"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Code that prepares some data (e.g. via mocking, hardcoding, copy into BD, etc.), in order to recreate a state that happens in practice"}),(0,s.jsx)(t.td,{children:"Code that simulates an (user) action. May be e.g. a direct function call, or a simulated user event for the browser's DOM, etc."}),(0,s.jsx)(t.td,{children:"The result is verified / assertions are made. The result can be retrieved in various ways, depending on situation. Either there is direct access to the result of the previous action (e.g. the result of the function call), or mocking techniques were used to record function calls/args, or we look somewhere for the data (in some var/data structure, in the DB, in the browser's DOM, etc.)."})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The Featurebook section of the TAD UI presents a synthetic view of all scenarios. E.g. the above scenario is rendered in the GUI like this:"}),"\n",(0,s.jsxs)(u,{title:"GIVEN a shopping cart w/ some articles, WHEN click on 'Place order', ...",children:[(0,s.jsx)(t.p,{children:"... THEN the screen containing the credit card form is shown"}),(0,s.jsx)(t.p,{children:"Some more details ..."})]}),"\n",(0,s.jsx)(t.h2,{id:"guidelines-to-write-nice-scenarios",children:'Guidelines to write "nice" scenarios'}),"\n",(0,s.jsx)(t.p,{children:"Scenarios need to offer a balanced compromise between:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["being ",(0,s.jsx)(t.strong,{children:"precise"}),", i.e. express the behaviors exactly, w/ details and w/o omissions;"]}),"\n",(0,s.jsxs)(t.li,{children:["being ",(0,s.jsx)(t.strong,{children:"not overwhelming"})," / wall of text, i.e. ",(0,s.jsx)(t.strong,{children:"reasonably"})," readable/digestible by consumers."]}),"\n"]}),"\n",(0,s.jsx)("center",{children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(71641).Z+"",width:"681",height:"491"})})}),"\n",(0,s.jsxs)(t.p,{children:["We observed that writing ",(0,s.jsx)(t.strong,{children:'"nice"'})," scenarios (i.e. w/ a good balance between the above conditions) can be challenging. Hence some guidelines."]}),"\n",(0,s.jsx)(t.h3,{id:"if-there-are-about-2-lines-of-text--split",children:"If there are about 2 lines of text => split"}),"\n",(0,s.jsx)(u,{title:"WHEN click (to edit) on an existing filter block, THEN the form opens, ...",children:(0,s.jsx)(t.p,{children:"... AND the components/form fields are populated w/ data from the filter."})}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsxs)(t.p,{children:["The title should have a ",(0,s.jsx)(t.strong,{children:"limited length"}),". About 2 or 3 keywords/sentences. It should occupy about 50% - 75% of the title bar (when the page is full screen on a desktop screen). It shouldn't render on 2 lines, even on smaller screens (e.g. laptop)."]}),(0,s.jsxs)(t.p,{children:["If we need ",(0,s.jsx)(t.strong,{children:"about 2 lines"}),", then we use ",(0,s.jsx)(t.code,{children:"..."}),'. The dots are saying to the reader: "hey, there is more content if you want; if you don\'t want, no problem".']})]}),"\n",(0,s.jsx)(t.h3,{id:"if-there-is-a-long-text--bullets",children:"If there is a long text => bullets"}),"\n",(0,s.jsx)(u,{title:"WHEN a field is selected from the dropdown, ...",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"... THEN then all components are enabled,"}),"\n",(0,s.jsx)(t.li,{children:"AND Sort/None is checked,"}),"\n",(0,s.jsxs)(t.li,{children:["AND the ",(0,s.jsx)(t.code,{children:"Operator"})," dropdown is populated w/ the operators associated w/ the field type,"]}),"\n",(0,s.jsxs)(t.li,{children:["AND for the ",(0,s.jsx)(t.code,{children:"Value"})," field a corresponding ",(0,s.jsx)(t.code,{children:"FieldEditor"})," is instantiated,"]}),"\n",(0,s.jsx)(t.li,{children:"AND focus is set on it."}),"\n"]})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"If there are several keywords/sentences => we use bullets."})}),"\n",(0,s.jsx)(t.h3,{id:"consecutive-scenarios",children:"Consecutive scenarios"}),"\n",(0,s.jsx)(u,{title:"WHEN click on 'Add', THEN the form opens, ...",children:"... (ommited)"}),"\n",(0,s.jsx)(u,{title:"AND WHEN a field is selected from the dropdown, ...",children:"... (ommited)"}),"\n",(0,s.jsx)(u,{title:"AND WHEN click on 'Apply', ...",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"... THEN a (server side) validation is made,"}),"\n",(0,s.jsx)(t.li,{children:"AND WHEN the result is OK,"}),"\n",(0,s.jsx)(t.li,{children:"THEN the form closes,"}),"\n",(0,s.jsx)(t.li,{children:"AND the newly created filter appears."}),"\n"]})}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsxs)(t.p,{children:["Notice how the scenario titles begin w/ ",(0,s.jsx)(t.code,{children:"AND"}),". This means that they continue the previous scenario."]}),(0,s.jsxs)(t.p,{children:["In the last scenario, we applied the technique from the previous paragraph (using bullets). Notice that we can mix ",(0,s.jsx)(t.code,{children:"THEN"}),"s (i.e. verification) w/ additional ",(0,s.jsx)(t.code,{children:"WHEN"}),"s (i.e. perform action)."]})]}),"\n",(0,s.jsx)(t.h3,{id:"details--comments-1",children:"Details / Comments 1"}),"\n",(0,s.jsx)(u,{title:"WHEN the user inputs values in field editors, THEN they are stored in the local state",children:(0,s.jsx)(t.p,{children:'In contrast w/ using the field editors in their natural environment (i.e. in a CRUD form that uses entity descriptors), here the "on change" callback is called right away. It\'s up to the consumer of the lib to maintain a state.'})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:'Here the title is short. So we don\'t use the "details" section to "hide" a long title. We use the "details" section to really provide ... additional details / comments.'})}),"\n",(0,s.jsx)(t.h3,{id:"details--comments-2",children:"Details / Comments 2"}),"\n",(0,s.jsxs)(u,{title:"WHEN the user inputs values in field editors, THEN they are stored in the local state, ...",children:[(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'... AND WHEN click on "Save",'}),"\n",(0,s.jsx)(t.li,{children:"THEN they are provided to the callback."}),"\n"]}),(0,s.jsx)(t.p,{children:'The consumer of this component receives the result only after the "Save" button is clicked. Until then, the intermediate values are stored in the local state.'})]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:'Here we combine the 2 techniques. We extend the title (in other words we "hide" part of it) + provide comments.'})}),"\n",(0,s.jsx)(t.h3,{id:"details--comments-3",children:"Details / Comments 3"}),"\n",(0,s.jsxs)(u,{title:"WHEN an unhandled error is caught, THEN it is sent to the server and logged",children:[(0,s.jsxs)(t.p,{children:["In the file: ",(0,s.jsx)(t.code,{children:"logs/client-error.log"})," (cf. ",(0,s.jsx)(t.code,{children:"logback-main.xml"}),") such errors look like this:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'2024-01-29 16:17:18,938 [      XNIO-1 task-54] ClientErrorLoggerController: user = admin; session = ERuRWsgJRxqc2YhbqHrLdRBKN_0LZgTdly9tEvMn; error = Error: Generated Error for test\n     at ClientErrorLoggerTestsAreDemo.generateError (http://localhost:3000/.../leave-management/leave-management-react/src/@crispico/foundation-react/clientErrorLogger/ClientErrorLoggerTestsAreDemo.ts:131:1) [return new Error("Generated Error for test");]\n     at ClientErrorLoggerTestsAreDemo.whenCatchErrorThenLogIt (http://localhost:3000/.../leave-management/leave-management-react/src/@crispico/foundation-react/clientErrorLogger/ClientErrorLoggerTestsAreDemo.ts:54:1) [const error = this.generateError();]\n     ...\n'})}),(0,s.jsxs)(t.p,{children:["Such an use case may be useful in ",(0,s.jsx)(t.strong,{children:"production"}),". E.g.:"]}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Maybe some users have got errors that happen, but they don't notice something wrong w/ the app => nobody complains."}),"\n",(0,s.jsx)(t.li,{children:"Maybe the app enters in an unstable state, but a browser refresh fixes it => nobody complains."}),"\n"]})]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"Here we provided a lot of details. Hence this comment is closer to doc style: uses formatting, is more verbose, etc."})}),"\n",(0,s.jsx)(t.h3,{id:"render-test",children:"RENDER TEST"}),"\n",(0,s.jsx)(u,{title:"RENDER TEST for a dashboard w/ Todos"}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsx)(t.p,{children:"A primary feature of a GUI is to display data that is in the memory of the computer."}),(0,s.jsx)(t.p,{children:"If we want to test this, we take the approach: 1/ we prepare some data; 2/ the program renders it in a screen; 3/ we verify that what's in the screen corresponds to what we want."}),(0,s.jsx)(t.p,{children:'The above, translated in "BDD language" might sound like:'}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'GIVEN a Todo w/ fields: name = "Buy bread", priority = "Urgent", index = "3",'}),"\n",(0,s.jsx)(t.li,{children:"WHEN the screen renders,"}),"\n",(0,s.jsx)(t.li,{children:'THEN the label for name = "Buy bread", priority = "Urgent" and colored in red, ...'}),"\n"]}),(0,s.jsxs)(t.p,{children:["To make it shorter, we use ",(0,s.jsx)(t.code,{children:"RENDER TEST"}),", which means the things above."]}),(0,s.jsx)(t.p,{children:"During dev, the communication between participants is probably complemented w/ some kind of drawing / wire frame."})]}),"\n",(0,s.jsx)(t.h3,{id:"hierarchic--tree-like-tests",children:"Hierarchic / tree-like tests"}),"\n",(0,s.jsxs)(t.p,{children:["There are cases where the code has lots of (imbricated) ifs. Such a problem may be well represented using a tree. And the number of scenarios tends to be the cartesian product. E.g. ",(0,s.jsx)(t.strong,{children:"w/ 2 levels"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"GIVEN version on the mobile device = 2.3,"}),"\n",(0,s.jsxs)(t.li,{children:["AND the mobile device is connected to Internet,","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"AND version required by the server = 2.3 (i.e. exactly the same), WHEN app starts, THEN let the app run"}),"\n",(0,s.jsx)(t.li,{children:"AND version required by the server = 2.4, THEN download new version, AND THEN start the app"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["AND the mobile device IS NOT connected to Internet,","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"AND version required by the server = 2.3, ..."}),"\n",(0,s.jsx)(t.li,{children:"AND version required by the server = 2.4, ..."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["For a case w/ ",(0,s.jsx)(t.strong,{children:"only 1 level"}),", we used:"]}),"\n",(0,s.jsx)(u,{title:"WHEN *multiple* errors are caught, AND the server is not accessible ..."}),"\n",(0,s.jsx)(u,{title:"... THEN all of them are queued AND sent later"}),"\n",(0,s.jsxs)(u,{title:"... AND the queue is full, THEN new errors are rejected",children:[(0,s.jsx)(t.p,{children:"I.e. we send the first errors and discard the last ones. The queue is a normal queue, not a circular one."}),(0,s.jsx)(t.p,{children:"Actually this is a common use case for dev. W/o the queue & limit, if the server is down, every server call would generate an error.\nIncluding when trying to send errors, so say hello to an endless loop and an unresponsive browser."})]}),"\n",(0,s.jsx)(t.admonition,{title:"Note",type:"warning",children:(0,s.jsx)(t.p,{children:"For cases w/ 2+ levels: we don't have a recipe yet. Please notify such cases so that we can find together a solution."})}),"\n",(0,s.jsx)(t.h3,{id:"features-wo-tests",children:"FEATURES W/O TESTS"}),"\n",(0,s.jsx)(u,{title:"FEATURES W/O TESTS",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The popup doesn't close when click outside it."}),"\n",(0,s.jsx)(t.li,{children:"The popup opens at the position of the cursor."}),"\n",(0,s.jsxs)(t.li,{children:["The popup closes at click on ",(0,s.jsx)(t.code,{children:"X"})," button."]}),"\n"]})}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsx)(t.p,{children:"There are cases where a feature has a small amount of code (sometimes even a line), but testing it would be a (tremendous) overkill. This example shows this well."}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Each one of the bullets translates into a property for the underlying ",(0,s.jsx)(t.code,{children:"<Modal>"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["So the feature is not small, but it takes little code to use it (\ud83d\ude42\ud83d\udc4dthumbs up for component reusal; thank you ",(0,s.jsx)(t.code,{children:"<Modal>"})," that you encapsulate features, so that we don't have to implement them again)."]}),"\n",(0,s.jsxs)(t.li,{children:["And besides, the component that we use (",(0,s.jsx)(t.code,{children:"<Modal>"}),") has probably its own tests for e.g. \"WHEN click on the X button, THEN the modal disappears\". We shouldn't re-test something that's not ours and is probably already tested."]}),"\n"]}),(0,s.jsxs)(t.p,{children:["So that's why ",(0,s.jsx)(t.strong,{children:"we don't write a test"}),". However, these ",(0,s.jsx)(t.strong,{children:"items are indeed features"}),'. And there is the ambition to have "what is written in the scenarios" == "what is implemented in the code". Hence they need to be mentioned.']}),(0,s.jsxs)(t.p,{children:["Note that the test function for scenario ",(0,s.jsx)(t.code,{children:"FEATURES W/O TEST"})," is empty. So we practically use it here only as a tool for documentation."]})]}),"\n",(0,s.jsx)(t.h2,{id:"comparing-with-cucumber",children:"Comparing with Cucumber"}),"\n",(0,s.jsx)(t.p,{children:"We still have hundreds of Cucumber files. Some examples:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'Feature: \n  Scenario: editContact(): Navigation to form\n    Given the renderer is given a Contact with id = 2\n    When the user clicks the edit contact button\n    Then navigation is attempted to "/properties_form/{id}" with id = "2"\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"Feature: \n  Scenario: onReveal(): Get all contacts\n    Given the DB contains the contacts\n      | name  | age | married | city      |\n      | john  |  30 | true    | Bucuresti |\n      | mary  |  16 | false   | Brasov    |\n      | johan |  20 | false   | Bucuresti |\n    And a mocked, mirroring ContactSorterComponent\n    And a mocked, mirroring SearcherComponent \n    When ContactListPage is revealed\n    Then the list has ContactRenderers displaying the following names\n      | john | mary | johan |\n    And the telescopic invocations were OK for ContactSorter and Searcher components\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The disadvantage is that there is a ",(0,s.jsx)(t.strong,{children:"lot of text"}),". And often it's copied/pasted between scenarios/steps w/ small modifications. The ",(0,s.jsx)(t.strong,{children:"attention span"})," of the reader is consumed after a couple of scenarios. And if there are errors hidden in the text, they are super easy to miss."]}),"\n",(0,s.jsxs)(t.p,{children:["Tests Are Demo/Featurebook offers practically ",(0,s.jsx)(t.strong,{children:'3 "zoom levels"'}),". A scenario has:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'"zoom level" 1: the tile of the scenario'}),"\n",(0,s.jsx)(t.li,{children:'"zoom level" 2: + the description part, which contains: the title continued and/or some rough details'}),"\n",(0,s.jsx)(t.li,{children:'"zoom level" 3: the detail = the Tests Are Demo test / code.'}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"In other words:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"Featurebook"}),(0,s.jsx)(t.th,{children:"Cucumber"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Size of a scenario"}),(0,s.jsx)(t.td,{children:'One line. OK, we cheat a bit by extending/"hiding" a portion of the line in the comments section'}),(0,s.jsx)(t.td,{children:"Several / many lines"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"How detailed?"}),(0,s.jsx)(t.td,{children:'We are not precise. We express in a general way; e.g. "WHEN we create a Todo"'}),(0,s.jsx)(t.td,{children:'We need to be specific, e.g. "WHEN we create a Todo w/ name = Buy bread, priority = Urgent, ..."'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"How exhaustive?"}),(0,s.jsx)(t.td,{children:"Our text doesn't cover all the details"}),(0,s.jsx)(t.td,{children:"Each scenario specifies/tests all the details"})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},71641:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/precision-vs-readability.drawio-8c8808218c06602fc1004b1e91f60b8b.svg"}}]);