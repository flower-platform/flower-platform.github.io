(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1898],{92674:(e,n,s)=>{"use strict";s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=s(85893),i=s(11151),r=s(93598);const o={sidebar_position:10},a="VS Code extension",c={id:"featurebook/vs-code-extension",title:"VS Code extension",description:"To be installed from here.",source:"@site/docs/featurebook/vs-code-extension.md",sourceDirName:"featurebook",slug:"/featurebook/vs-code-extension",permalink:"/docusaurus/docs/featurebook/vs-code-extension",draft:!1,unlisted:!1,editUrl:"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/blob/master/docusaurus/docs/featurebook/vs-code-extension.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Featurebook",permalink:"/docusaurus/docs/category/featurebook"},next:{title:"Writing scenarios",permalink:"/docusaurus/docs/featurebook/writing-scenarios"}},l={},d=[{value:"Real-time preview of scenario content",id:"real-time-preview-of-scenario-content",level:2},{value:"Work w/ images/screenshots",id:"work-w-imagesscreenshots",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"vs-code-extension",children:"VS Code extension"}),"\n",(0,t.jsxs)(n.p,{children:["To be installed from ",(0,t.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items/?itemName=famiprog.featurebook",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["It is published also in the ",(0,t.jsx)(n.a,{href:"https://open-vsx.org/",children:"Open VSX Registry"})," so that it can be used in the online instance of VS Code embedded in GitLab. Extensions are not enabled by default there. Your GitLab admin needs to enable them. Then each user needs to activate them as well (Click on user icon > ",(0,t.jsx)(n.code,{children:"Preferences"})," > scroll to ",(0,t.jsx)(n.code,{children:"Integrations"})," > check ",(0,t.jsx)(n.code,{children:"Enable extension marketplace"}),")."]}),"\n",(0,t.jsx)(n.h2,{id:"real-time-preview-of-scenario-content",children:"Real-time preview of scenario content"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"realtime",src:s(98926).Z+"",width:"1640",height:"515"})}),"\n",(0,t.jsxs)(n.p,{children:["When the file is edited, the ",(0,t.jsx)(n.code,{children:".md"})," preview is updated in real-time. Especially useful to see how the Markdown syntax is rended. E.g. ",(0,t.jsx)(n.strong,{children:"bold"}),", ",(0,t.jsx)(n.code,{children:"code"}),", etc."]}),"\n",(0,t.jsx)(n.h2,{id:"work-w-imagesscreenshots",children:"Work w/ images/screenshots"}),"\n",(0,t.jsx)(n.p,{children:"VS Code has a nice feature:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"capture a screenshot"})," (i.e. the image will be stored in the clipboard);"]}),"\n",(0,t.jsxs)(n.li,{children:["select a dir, and ",(0,t.jsx)(n.strong,{children:"paste"})," (",(0,t.jsx)(n.code,{children:"CTRL + V"}),") => a new file will be created there, w/ the image from clipboard."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"paste",src:s(95046).Z+"",width:"638",height:"228"})}),"\n",(0,t.jsx)(n.p,{children:"We designed our extension to leverage this."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"screenshot",src:s(98591).Z+"",width:"1856",height:"493"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r.h8,{s:"1"}),(0,t.jsx)(r.h8,{s:"2"})," ",(0,t.jsx)(n.strong,{children:"Click"}),", for the scenario you want to add images."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r.h8,{s:"3"})," A corresponding ",(0,t.jsx)(n.strong,{children:"dir"})," will be created and/or focused it in the tree."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r.h8,{s:"4"})," ",(0,t.jsx)(n.strong,{children:"Paste"})," (",(0,t.jsx)(n.code,{children:"CTRL + V"}),") the image (that you have in the clipboard; e.g. a screenshot you just made). Tip:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if you have ",(0,t.jsx)(n.strong,{children:"only one image"}),' in your scenario, leave the name "as is" (i.e. ',(0,t.jsx)(n.code,{children:"image.png"}),"). It won't collide w/ other scenarios."]}),"\n",(0,t.jsxs)(n.li,{children:["if you have ",(0,t.jsx)(n.strong,{children:"multiple images"}),", then you should ",(0,t.jsx)(n.strong,{children:"rename"})," each one w/ a meaningful name."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r.h8,{s:"5"})," ",(0,t.jsx)(n.strong,{children:"Reference"})," the image using ",(0,t.jsx)(n.code,{children:"@img"})," from the scenario. You can access images from other scenarios using e.g. ",(0,t.jsx)(n.code,{children:"../otherScenario/image.png"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r.h8,{s:"6"})," And there you go: the ",(0,t.jsx)(n.strong,{children:"preview is updated"})," w/ the image."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r.h8,{s:"7"})," BTW: this is the place where the ",(0,t.jsx)(n.code,{children:".md"})," file is ",(0,t.jsx)(n.strong,{children:"generated"}),". You can open it from the web (e.g. GitHub); the images will display."]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},93598:(e,n,s)=>{"use strict";s.d(n,{sS:()=>h,Tm:()=>u,M_:()=>g,Fb:()=>x,JR:()=>m,lj:()=>l,h8:()=>d});s(67294);class t{static now(){return new Date}static consoleLogJson(e,n){void 0===n&&(n=!0);const s=JSON.stringify(e,(()=>{const e=new WeakSet;return(n,s)=>{if(!n.startsWith("__react")){if("object"==typeof s&&null!==s){if(e.has(s))return;e.add(s)}return s}}})(),2);return n&&console.log(s),s}static substringAfter(e,n,s){const t=s?e.lastIndexOf(n):e.indexOf(n);return t<0?e:e.substring(t+n.length)}static setTimeoutPromise(e,n){return new Promise((s=>setTimeout((()=>{const n=e?.();s(n)}),n)))}}var i=s(9286),r=s(25142),o=s(73981),a=s(91262),c=s(85893);const l=e=>{return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("a",{target:"_blank",href:(n=e.children,(n.startsWith("foundation/")?"https://gitlab.xops-online.com/foundation/foundation/-/tree/main/"+t.substringAfter(n,"foundation/"):"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/tree/master/"+n)+(e.lineNumbers?.[0]?`#L${e.lineNumbers[0]}`:"")+(e.lineNumbers?.[1]?`-L${e.lineNumbers[1]}`:"")),children:[t.substringAfter(e.children,"/",!0),e.region&&(0,c.jsxs)("small",{children:["\xa0",(0,c.jsxs)("i",{children:["(region ",e.region,",\xa0",e.lineNumbers[0]===e.lineNumbers[1]?(0,c.jsxs)(c.Fragment,{children:["at line ",e.lineNumbers[0]]}):(0,c.jsxs)(c.Fragment,{children:["between lines [",e.lineNumbers[0],", ",e.lineNumbers[1],"])"]})]})]})]})});var n},d=e=>(0,c.jsx)(r.Z,{circular:!0,color:"blue",children:e.s}),h=e=>{let{src:{text:n,path:s},region:t,...r}=e;const o=new RegExp(`#region\\s*${t}[^\\r\\n]*\\r?\\n(.*?)#endregion`,"s").exec(n);if(!o)throw new Error(`In file = ${s}, cannot find region = ${t}, i.e. a portion like:\n\n#region ${t}\n...\n#endregion`);let a,d=1,h=-1;for(a=0;a<o.index+o[0].length;a++)"\n"===n[a]&&d++,-1===h&&a>=o.index&&(h=d);h++,d--;let u=o[1];u=/(.*)(\r?\n.*?$)/gs.exec(u)[1],u="\n"+u;const g=u.match(/\n(\s)*\S/);let x;if(g&&(x=g[1])){const e=new RegExp(`\\n(${x}*)\\S`,"g");let n,s=-1;for(;null!==(n=e.exec(u));)(s<0||s>n[1].length)&&(s=n[1].length);const t=x.repeat(s);u=u.replace(new RegExp("\\n"+t,"g"),"\n")}return u=u.substring(1),(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(i.Z,{title:(0,c.jsxs)(c.Fragment,{children:["Snippet extracted from ",(0,c.jsx)(l,{region:t,lineNumbers:[h,d],children:s})]}),...r,children:u})})},u=e=>(0,c.jsx)(h,{language:"java",...e}),g=e=>(0,c.jsx)(h,{language:"ts",...e}),x=e=>(0,c.jsx)(a.Z,{children:()=>(0,c.jsx)(o.J6,{recordedTestsUrl:"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/raw/master/leave-management/leave-management-react/public/recordedTests/recordedTest.json",includeCredentialsInJsonRequestRegex:/https:\/\/gitlab\.xops-online\.com\/*/,...e})}),m=e=>(0,c.jsx)(a.Z,{children:()=>(0,c.jsx)(o.J6,{recordedTestsUrl:"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/raw/master/leave-management/leave-management-react/public/recordedTestsServer/recordedTest.json",includeCredentialsInJsonRequestRegex:/https:\/\/gitlab\.xops-online\.com\/*/,...e})})},13411:e=>{function n(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}n.keys=()=>[],n.resolve=n,n.id=13411,e.exports=n},95046:(e,n,s)=>{"use strict";s.d(n,{Z:()=>t});const t=s.p+"assets/images/paste-32e49eafbd5e404848b3d9dd3d06aaf8.png"},98926:(e,n,s)=>{"use strict";s.d(n,{Z:()=>t});const t=s.p+"assets/images/realtime-2ee239b3d7113ac3f72053cfa17a15af.png"},98591:(e,n,s)=>{"use strict";s.d(n,{Z:()=>t});const t=s.p+"assets/images/screenshot-5b1e73fe14a3bd23a0ffe81c312ec01d.png"},24654:()=>{},62183:()=>{},13024:()=>{},62715:()=>{},13611:()=>{},28353:()=>{},1210:()=>{},43454:()=>{}}]);