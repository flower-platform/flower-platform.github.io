"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[503],{60064:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var n=o(85893),s=o(11151);const r={},i="To test? Or not to test? That is the question",c={id:"featurebook/recipes/to-test-or-not-to-test",title:"To test? Or not to test? That is the question",description:'(Funny \ud83d\ude42 : paraphrasing "to be, or not to be").',source:"@site/docs/featurebook/recipes/to-test-or-not-to-test.md",sourceDirName:"featurebook/recipes",slug:"/featurebook/recipes/to-test-or-not-to-test",permalink:"/docusaurus/docs/featurebook/recipes/to-test-or-not-to-test",draft:!1,unlisted:!1,editUrl:"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/blob/master/docusaurus/docs/featurebook/recipes/to-test-or-not-to-test.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Referencing UI elements (WHEN click on button Accept proposal ...)",permalink:"/docusaurus/docs/featurebook/recipes/ref-ui-elements"},next:{title:'[To move] I encourage people to use "Inspect testid"',permalink:"/docusaurus/docs/featurebook/recipes/use-inspect-test-id"}},a={},u=[];function l(t){const e={a:"a",code:"code",em:"em",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"to-test-or-not-to-test-that-is-the-question",children:"To test? Or not to test? That is the question"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:"(Funny"})," \ud83d\ude42 ",(0,n.jsxs)(e.em,{children:[": paraphrasing ",(0,n.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/To_be,_or_not_to_be",children:'"to be, or not to be"'}),")"]}),"."]}),"\n",(0,n.jsx)(e.p,{children:"For an UI Component. It is:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["non-interactionable","\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"dynamic (e.g. count of a list) => to be tested"}),"\n",(0,n.jsxs)(e.li,{children:["static (e.g. a separator) => not to test; maybe to mention in ",(0,n.jsx)(e.code,{children:"FEATURES W/O TESTS"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.li,{children:"interactionable => to be tested. But static things (e.g. label, color, etc. of a button): not to test"}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Besides this: analyze benefit/effort to write test. If ratio is low => ",(0,n.jsx)(e.code,{children:"FEATURES W/O TESTS"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["In this category we also have places where we ",(0,n.jsx)(e.strong,{children:"use libs/components"}),". The lib/component is already feature-packed and is easy-to-use via some props/configuration. In this case, we do mention those configs, but w/o test. E.g. a modal for which we configured not closable on click outside, w/ close button, etc."]})]})}function d(t={}){const{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(l,{...t})}):l(t)}},11151:(t,e,o)=>{o.d(e,{Z:()=>c,a:()=>i});var n=o(67294);const s={},r=n.createContext(s);function i(t){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),n.createElement(r.Provider,{value:e},t.children)}}}]);