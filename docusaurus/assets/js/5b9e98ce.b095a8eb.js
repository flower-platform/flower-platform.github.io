"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4902],{97815:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=t(85893),i=t(11151);const o={sidebar_position:20},r="Writing scenarios",c={id:"featurebook/writing-scenarios",title:"Writing scenarios",description:"The name of the function always starts w/ when...(), i.e. the (first) trigger* of the test. Hence there is no WHEN ... section in the comment.",source:"@site/docs/featurebook/writing-scenarios.md",sourceDirName:"featurebook",slug:"/featurebook/writing-scenarios",permalink:"/docusaurus/docs/featurebook/writing-scenarios",draft:!1,unlisted:!1,editUrl:"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/blob/master/docusaurus/docs/featurebook/writing-scenarios.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"VS Code extension",permalink:"/docusaurus/docs/featurebook/vs-code-extension"},next:{title:"The special first scenario: _quickInstructions()",permalink:"/docusaurus/docs/featurebook/first-scenario-special"}},d={},l=[{value:"Dependent tests",id:"dependent-tests",level:2},{value:"Multiple <code>WHEN</code>s",id:"multiple-whens",level:2},{value:"Series",id:"series",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"writing-scenarios",children:"Writing scenarios"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/**\n * * THEN1 `Todo.priority` -> color of the top border\n * * THEN2 `Todo.text`\n * * THEN3 `Todo.done`: when `true`, we 'line through' the text\n * * THEN4 `Todo.done`: when `true` we **CHECK** the checkbox\n * * THEN5 idem THEN1\n...\n * * THEN12 Number of Todos w/ priority = High\n */\n@Scenario()\nasync whenScreenTodosShows() {\n...\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"name of the function always starts w/"})," ",(0,s.jsx)(n.code,{children:"when...()"}),", i.e. the (first) ",(0,s.jsx)(n.strong,{children:"trigger"})," of the test. Hence there is no ",(0,s.jsx)(n.code,{children:"WHEN ..."})," section in the comment.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For ",(0,s.jsx)(n.strong,{children:"UI oriented trigger actions"})," use the e.g. ",(0,s.jsx)(n.code,{children:"whenScreenAbcShows()"}),", ",(0,s.jsx)(n.code,{children:"whenButtonOkClicked()"}),". I.e. pattern ",(0,s.jsx)(n.code,{children:"whenSomeComponentSomeAction()"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["For more unit tests style, e.g. ",(0,s.jsx)(n.code,{children:"whenCalculate()"})," for testing the function ",(0,s.jsx)(n.code,{children:"calculate()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["In the comment, use ",(0,s.jsx)(n.strong,{children:"bullets and the keywords"})," ",(0,s.jsx)(n.code,{children:"GIVENx"}),", ",(0,s.jsx)(n.code,{children:"WHENx"}),", ",(0,s.jsx)(n.code,{children:"THENx"}),'. The "x" is needed to provide uniqueness to the bullets.']}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Each bullet will need to be explicitly referenced from the code of the test. No reference => runtime error. E.g.:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'tad.ref("THEN12");\nawait tad.assertWaitable.equal(tad.screenCapturing.getByTestId(testids.totalHigh).textContent, "2")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"dependent-tests",children:"Dependent tests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"...\n@Scenario()\nasync andWhenButtonAddClicked() {\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"andWhen...()"}),'. The "and" signifies that the test/function is dependent on what happened in the previous.']}),"\n",(0,s.jsxs)(n.h2,{id:"multiple-whens",children:["Multiple ",(0,s.jsx)(n.code,{children:"WHEN"}),"s"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/**\n * * THEN the form opens\n * * THEN1 first text field is already focused. So that people can directly start typing, w/o needing to click here first\n * ---\n * * WHEN2 type and save\n * * THEN2 The newly added Todo appears at the bottom of the list\n */\n@Scenario()\nasync andWhenButtonAddClicked() {\n"})}),"\n",(0,s.jsx)(n.p,{children:"A test w/ multiple trigger actions, not just the initial one (cf. function name)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Separate w/ ",(0,s.jsx)(n.code,{children:"---"}),". Separation w/ empty line is no go; the rendered Markdown is not nice."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"WHEN2"}),", ",(0,s.jsx)(n.code,{children:"WHEN3"}),", etc. Don't use ",(0,s.jsx)(n.code,{children:"WHEN1"}),"; it is reserved for the trigger from the function name."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"series",children:"Series"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/**\n * Normal use.  \n * \n * * THEN ...\n */\nwhenButtonShowReportClick01() {\n...\n\n/**\n * No data.\n * \n * * THEN ...\n */\nwhenButtonShowReportClick02() {\n...\n\n/**\n * Invalid period.\n * \n * * THEN ...\n */\nwhenButtonShowReportClick03() {\n...\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.strong,{children:"numbered suffixes"})," (",(0,s.jsx)(n.code,{children:"...01()"}),", ",(0,s.jsx)(n.code,{children:"...02()"}),") + a brief explanation in the comment. We tried in the past to put the explanation in the name of the function. It was ugly."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);