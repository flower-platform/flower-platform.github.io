[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/components/BackgroundLayer.js",
    "content": "import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport {convertDateToMoment} from '../utils/timeUtils';\nimport {Marker} from './Marker';\nimport {HighlightedInterval} from './HighlightedInterval';\nimport moment from 'moment';\n\n/**\n * @extends React.Component<BackgroundLayer.propTypes>\n */\nexport class BackgroundLayer extends React.Component {\n  static propTypes = {\n    /**\n     * If `true`, it highlights the weekends.\n     *\n     * @type { boolean }\n     */\n    highlightWeekends: PropTypes.bool,\n\n    /**\n     * Custom class name for highlighting the weekends.\n     *\n     * NOTE: No need to provide this; because it has a default class. If a custom class is provided, `!important` should be used to override properties from the default class.\n     *\n     * @type { string }\n     */\n    highlightWeekendsClassName: PropTypes.string,\n\n    /**\n     * Custom style for highlighting the weekends.\n     *\n     * NOTE: No need to provide this; because it has a default class.\n     *\n     * @type { object }\n     */\n    highlightWeekendsStyle: PropTypes.object,\n\n    /**\n     * If `true`, it draws a marker (vertical line) that indicates the current time.\n     *\n     * @type { boolean }\n     */\n    nowMarker: PropTypes.bool,\n\n    /**\n     * Custom class name for now marker.\n     *\n     * NOTE: No need to provide this; because it has a default class. If a custom class is provided, `!important` should be used to override properties from the default class.\n     *\n     * @type { string }\n     */\n    nowMarkerClassName: PropTypes.string,\n\n    /**\n     * Custom style for now marker.\n     *\n     * NOTE: No need to provide this; because it has a default class.\n     *\n     * @type { object }\n     */\n    nowMarkerStyle: PropTypes.object,\n\n    /**\n     * If `true`, it draws vertical lines, according to the intervals defined by the bottom `Timebar`.\n     *\n     * @type { boolean }\n     */\n    verticalGrid: PropTypes.bool,\n\n    /**\n     * Custom class name for vertical grid.\n     *\n     * NOTE: No need to provide this; because it has a default class. If a custom class is provided, `!important` should be used to override properties from the default class.\n     *\n     * @type { string }\n     */\n    verticalGridClassName: PropTypes.string,\n\n    /**\n     * Custom style for vertical grid.\n     *\n     * NOTE: No need to provide this; because it has a default class.\n     *\n     * @type { object }\n     */\n    verticalGridStyle: PropTypes.object,\n\n    /**\n     * @type { Array.<JSX.Element> }\n     */\n    markers: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * @type { Array.<JSX.Element> }\n     */\n    highlightedIntervals: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * Internal (passed by parent). Start of the timeline display interval, as date (moment object).\n     *\n     * @type { object }\n     */\n    startDateTimeline: PropTypes.object,\n\n    /**\n     * Internal (passed by parent). End of the timeline display interval, as date (moment object).\n     *\n     * @type { object }\n     */\n    endDateTimeline: PropTypes.object,\n\n    /**\n     * Internal (passed by parent). The height of the background layer.\n     *\n     * @type { number }\n     */\n    height: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). The position of the top edge of background layer.\n     *\n     * @type { number }\n     */\n    topOffset: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). Total width of the timeline.\n     *\n     * @type { number }\n     */\n    width: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). The position of the left edge of background layer.\n     *\n     * @type { number }\n     */\n    leftOffset: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). The vertical lines of the grid are already calculated by `Timerbar`.\n     *\n     * @type { Array.<object>}\n     */\n    verticalGridLines: PropTypes.arrayOf(PropTypes.object)\n  };\n\n  static defaultProps = {\n    highlightWeekends: false,\n    highlightWeekendsClassName: undefined,\n    highlightWeekendsStyle: undefined,\n    nowMarker: false,\n    nowMarkerClassName: undefined,\n    nowMarkerStyle: undefined,\n    verticalGrid: false,\n    verticalGridClassName: undefined,\n    verticalGridStyle: undefined,\n    verticalGridLines: [],\n    markers: [],\n    highlightedIntervals: [],\n    height: undefined,\n    topOffset: undefined,\n    width: undefined,\n    leftOffset: undefined,\n    startDateTimeline: undefined,\n    endDateTimeline: undefined\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {verticalLines: [], shouldUpdate: false, weekends: []};\n    this.calculateHorizontalPosition = this.calculateHorizontalPosition.bind(this);\n  }\n\n  componentDidMount() {\n    this.calculateHighlightedWeekends();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.height !== prevProps.height ||\n      this.props.width !== prevProps.width ||\n      !this.props.startDateTimeline.isSame(prevProps.startDateTimeline) ||\n      !this.props.endDateTimeline.isSame(prevProps.endDateTimeline)\n    ) {\n      this.calculateHighlightedWeekends();\n      this.setState({shouldUpdate: true});\n      return;\n    }\n    if (this.state.shouldUpdate) {\n      this.setState({shouldUpdate: false});\n    }\n  }\n\n  /**\n   * It calculates the horizontal position (left and width in pixels) of an element from the time positions (start, end).\n   * @param { object | number } start\n   * @param { object | number } end\n   * @returns { object } left position and width in pixels\n   */\n  calculateHorizontalPosition(start, end) {\n    const intervalMillis = this.props.endDateTimeline.diff(this.props.startDateTimeline, 'milliseconds');\n    const pixelsPerMillis = (this.props.width - this.props.leftOffset) / intervalMillis;\n    const startAsMoment = convertDateToMoment(start);\n    const endAsMoment = convertDateToMoment(end);\n    if (endAsMoment.isBefore(this.props.startDateTimeline) || startAsMoment.isAfter(this.props.endDateTimeline)) {\n      return {};\n    }\n\n    let offset = startAsMoment.diff(this.props.startDateTimeline, 'milliseconds');\n    let duration = endAsMoment.diff(startAsMoment, 'milliseconds');\n    const left = this.props.leftOffset + offset * pixelsPerMillis;\n    let width = Math.round(duration * pixelsPerMillis);\n    return {left, width};\n  }\n\n  /**\n   * Calculates the weekend intervals for the timeline displayed interval (`startDateTimeline` - `endDateTimeline`).\n   */\n  calculateHighlightedWeekends() {\n    let weekends = [];\n    if (!this.props.highlightWeekends) {\n      return;\n    }\n\n    // get display interval start date; if it's sunday, substract a day\n    let startDate = this.props.startDateTimeline.clone();\n    if (startDate.weekday() == 0) {\n      startDate = startDate.subtract(1, 'days');\n    }\n\n    let weekendStartDate = startDate.startOf('isoWeek').day('saturday');\n    let weekendEndDate = null;\n    // compute all the weekends in the interval\n    while (weekendStartDate < this.props.endDateTimeline) {\n      weekendEndDate = weekendStartDate.clone().add(2, 'days');\n      weekends.push({\n        start: weekendStartDate,\n        end: weekendEndDate,\n        className: `rct9k-background-layer-highlight-weekends ${this.props.highlightWeekendsClassName}`\n      });\n\n      // go to the next weekend\n      weekendStartDate = weekendEndDate\n        .clone()\n        .startOf('isoWeek')\n        .day('saturday');\n    }\n    this.setState({weekends: weekends});\n  }\n\n  renderHighlightedWeekends() {\n    return (\n      <Fragment>\n        {this.props.highlightWeekends &&\n          this.state.weekends.map((weekend, index) => {\n            return (\n              <HighlightedInterval\n                key={index}\n                start={weekend.start}\n                end={weekend.end}\n                className={weekend.className}\n                style={this.props.highlightWeekendsStyle}\n                top={this.props.topOffset}\n                height={this.props.height}\n                shouldUpdate={this.state.shouldUpdate}\n                calculateHorizontalPosition={this.calculateHorizontalPosition}\n              />\n            );\n          })}\n      </Fragment>\n    );\n  }\n\n  renderCustomComponents(components) {\n    return (\n      <Fragment>\n        {components.map((component, index) => {\n          return React.cloneElement(component, {\n            key: index,\n            height: this.props.height,\n            top: this.props.topOffset,\n            shouldUpdate: this.state.shouldUpdate,\n            calculateHorizontalPosition: this.calculateHorizontalPosition\n          });\n        })}\n      </Fragment>\n    );\n  }\n\n  renderVerticalGrid() {\n    const {verticalGrid, topOffset, height, leftOffset, width, verticalGridLines, verticalGridClassName} = this.props;\n    return (\n      <Fragment>\n        {verticalGrid && verticalGridLines && (\n          <div\n            className=\"rct9k-background-layer-vertical-grid\"\n            style={{top: topOffset, height: height, left: leftOffset, width: width - leftOffset}}>\n            {verticalGridLines.map((verticalLine, index) => {\n              return (\n                <span\n                  key={index}\n                  className={`rct9k-background-layer-vertical-line ${verticalGridClassName}`}\n                  style={{...this.props.verticalGridStyle, width: verticalLine.size}}\n                />\n              );\n            })}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n\n  renderNowMarker() {\n    const {nowMarker, height, topOffset, nowMarkerClassName} = this.props;\n    const currentDate = moment();\n    const overlappsDisplayedInterval =\n      this.props.startDateTimeline.isSameOrBefore(currentDate) && this.props.endDateTimeline.isSameOrAfter(currentDate);\n    return (\n      <Fragment>\n        {nowMarker && overlappsDisplayedInterval && (\n          <Marker\n            date={currentDate}\n            top={0}\n            height={height + topOffset}\n            shouldUpdate={this.state.shouldUpdate}\n            calculateHorizontalPosition={this.calculateHorizontalPosition}\n            className={`rct9k-background-layer-now-marker ${nowMarkerClassName}`}\n            style={this.props.nowMarkerStyle}\n          />\n        )}\n      </Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.renderHighlightedWeekends()}\n        {this.renderCustomComponents(this.props.highlightedIntervals)}\n        {this.renderNowMarker()}\n        {this.renderCustomComponents(this.props.markers)}\n        {this.renderVerticalGrid()}\n      </Fragment>\n    );\n  }\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/BackgroundLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "BackgroundLayer",
    "memberof": "src/components/BackgroundLayer.js",
    "static": true,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/BackgroundLayer.js",
    "importStyle": "{BackgroundLayer}",
    "description": "",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "static": true,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "defaultProps",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "static": true,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer.defaultProps",
    "access": "public",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 170,
    "undocument": true
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#state",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "type": {
      "types": [
        "{\"verticalLines\": *, \"shouldUpdate\": *, \"weekends\": *}"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "calculateHorizontalPosition",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#calculateHorizontalPosition",
    "access": "public",
    "description": "It calculates the horizontal position (left and width in pixels) of an element from the time positions (start, end).",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ object } left position and width in pixels"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " object ",
          " number "
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " object ",
          " number "
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " object "
      ],
      "spread": false,
      "description": "left position and width in pixels"
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "calculateHighlightedWeekends",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#calculateHighlightedWeekends",
    "access": "public",
    "description": "Calculates the weekend intervals for the timeline displayed interval (`startDateTimeline` - `endDateTimeline`).",
    "lineNumber": 221,
    "params": [],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "renderHighlightedWeekends",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#renderHighlightedWeekends",
    "access": "public",
    "description": null,
    "lineNumber": 253,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "renderCustomComponents",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#renderCustomComponents",
    "access": "public",
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "params": [
      {
        "name": "components",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "renderVerticalGrid",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#renderVerticalGrid",
    "access": "public",
    "description": null,
    "lineNumber": 292,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "renderNowMarker",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#renderNowMarker",
    "access": "public",
    "description": null,
    "lineNumber": 315,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/BackgroundLayer.js~BackgroundLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/BackgroundLayer.js~BackgroundLayer#render",
    "access": "public",
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/components/ColumnRenderer.js",
    "content": "import React from 'react';\nimport {Column} from '../index';\n\n/**\n * Renderer for column header.\n * @param { object } props - Component props\n * @param { Column } props.column - The properties of the column\n * @param { string } props.column.headerLabel - The header's label\n */\nexport class ColumnHeaderRenderer extends React.Component {\n  /**\n   * Returns the label of the header.\n   * @returns { string }\n   */\n  getLabel() {\n    return this.props.column ? this.props.column.headerLabel : '';\n  }\n\n  render() {\n    return <span>{this.getLabel()}</span>;\n  }\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/ColumnRenderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "ColumnHeaderRenderer",
    "memberof": "src/components/ColumnRenderer.js",
    "static": true,
    "longname": "src/components/ColumnRenderer.js~ColumnHeaderRenderer",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/ColumnRenderer.js",
    "importStyle": "{ColumnHeaderRenderer}",
    "description": "Renderer for column header.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          " object "
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Component props"
      },
      {
        "nullable": null,
        "types": [
          " Column "
        ],
        "spread": false,
        "optional": false,
        "name": "props.column",
        "description": "The properties of the column"
      },
      {
        "nullable": null,
        "types": [
          " string "
        ],
        "spread": false,
        "optional": false,
        "name": "props.column.headerLabel",
        "description": "The header's label"
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "getLabel",
    "memberof": "src/components/ColumnRenderer.js~ColumnHeaderRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ColumnRenderer.js~ColumnHeaderRenderer#getLabel",
    "access": "public",
    "description": "Returns the label of the header.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/ColumnRenderer.js~ColumnHeaderRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ColumnRenderer.js~ColumnHeaderRenderer#render",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/components/GroupRenderer.js",
    "content": "import React from 'react';\nimport {Group} from '../index';\n\n/**\n * Group (row) renderer class\n * @param { object } props - Component props\n * @param { string } props.labelProperty - The key of the data from group that should be rendered\n * @param { Group } props.group - The group to be rendered\n * @param { string } props.group.id - The group's id\n */\nexport class GroupRenderer extends React.Component {\n  /**\n   * Returns the label of the cell.\n   * @returns { string }\n   */\n  getLabel() {\n    return this.props.group[this.props.labelProperty];\n  }\n\n  render() {\n    return (\n      <span data-group-index={this.props.group.id}>\n        <span>{this.getLabel()}</span>\n      </span>\n    );\n  }\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/GroupRenderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "GroupRenderer",
    "memberof": "src/components/GroupRenderer.js",
    "static": true,
    "longname": "src/components/GroupRenderer.js~GroupRenderer",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/GroupRenderer.js",
    "importStyle": "{GroupRenderer}",
    "description": "Group (row) renderer class",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          " object "
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Component props"
      },
      {
        "nullable": null,
        "types": [
          " string "
        ],
        "spread": false,
        "optional": false,
        "name": "props.labelProperty",
        "description": "The key of the data from group that should be rendered"
      },
      {
        "nullable": null,
        "types": [
          " Group "
        ],
        "spread": false,
        "optional": false,
        "name": "props.group",
        "description": "The group to be rendered"
      },
      {
        "nullable": null,
        "types": [
          " string "
        ],
        "spread": false,
        "optional": false,
        "name": "props.group.id",
        "description": "The group's id"
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "getLabel",
    "memberof": "src/components/GroupRenderer.js~GroupRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/GroupRenderer.js~GroupRenderer#getLabel",
    "access": "public",
    "description": "Returns the label of the cell.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/GroupRenderer.js~GroupRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/GroupRenderer.js~GroupRenderer#render",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/components/GroupRenderer.test.js",
    "content": "'use strict';\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {expect} from 'chai';\nimport {GroupRenderer} from './GroupRenderer';\n\ndescribe('Group renderer', () => {\n  it('should render the group w/o label property', () => {\n    const group = {title: 'my_test'};\n    const component = shallow(<GroupRenderer group={group} />);\n    expect(component.text()).to.equals('');\n  });\n  it('should render the group w/ label property', () => {\n    const group = {title: 'my_test'};\n    const component = shallow(<GroupRenderer group={group} labelProperty={'title'} />);\n    expect(component.text()).to.equals('my_test');\n  });\n});\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/GroupRenderer.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/components/HighlightedInterval.js",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport {convertDateToMoment} from '../utils/timeUtils';\n\n/**\n * @extends React.Component<HighlightedInterval.propTypes>\n */\nexport class HighlightedInterval extends React.Component {\n  static propTypes = {\n    /**\n     * Start of the highlighted interval, as date (numeric/millis or moment object, cf. `Timeline.props.useMoment`).\n     *\n     * @type { object | number }\n     */\n    start: PropTypes.oneOfType([PropTypes.object, PropTypes.number]).isRequired,\n\n    /**\n     * End of the highlighted interval, as date (numeric/millis or moment object, cf. `Timeline.props.useMoment`).\n     *\n     * @type { object | number}\n     */\n    end: PropTypes.oneOfType([PropTypes.object, PropTypes.number]).isRequired,\n\n    /**\n     * Class name used to render the interval.\n     *\n     * @type { string }\n     */\n    className: PropTypes.string,\n\n    /**\n     * Style used to render the interval.\n     *\n     * @type { object }\n     */\n    style: PropTypes.object,\n\n    /**\n     * Internal (passed by parent). The height of the highlighted interval.\n     *\n     * @type { number }\n     */\n    height: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). `HighlightedInterval` uses absolute positioning, thus it needs the `top` property\n     * to set the top edge if the element.\n     *\n     * @type { number }\n     */\n    top: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). This function allows the conversion of `start`/`end` (time) properties to pixels.\n     *\n     * @type { Function }\n     */\n    calculateHorizontalPosition: PropTypes.func.isRequired,\n\n    /**\n     * Internal (passed by parent). If true timeline will try to minimize re-renders (e.g: the displayed timeline interval changes).\n     *\n     * @type { boolean }\n     */\n    shouldUpdate: PropTypes.bool\n  };\n\n  static defaultProps = {\n    className: '',\n    height: undefined,\n    top: undefined,\n    calculateHorizontalPosition: () => {},\n    shouldUpdate: false\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (\n      nextProps.shouldUpdate ||\n      this.props.height !== nextProps.height ||\n      this.props.top !== nextProps.top ||\n      !convertDateToMoment(this.props.start).isSame(convertDateToMoment(nextProps.start).valueOf()) ||\n      !convertDateToMoment(this.props.end).isSame(convertDateToMoment(nextProps.end))\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns { object } style\n   */\n  getStyle() {\n    const {left, width} = this.props.calculateHorizontalPosition(this.props.start, this.props.end);\n    return {\n      ...this.props.style,\n      left,\n      width,\n      top: this.props.top,\n      height: this.props.height,\n      display: left && width ? 'block' : 'none'\n    };\n  }\n\n  /**\n   * @returns { string } className\n   */\n  getClassName() {\n    return `rct9k-highlighted-interval ${this.props.className}`;\n  }\n\n  render() {\n    return <div className={this.getClassName()} style={this.getStyle()} />;\n  }\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/HighlightedInterval.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "HighlightedInterval",
    "memberof": "src/components/HighlightedInterval.js",
    "static": true,
    "longname": "src/components/HighlightedInterval.js~HighlightedInterval",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/HighlightedInterval.js",
    "importStyle": "{HighlightedInterval}",
    "description": "",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/components/HighlightedInterval.js~HighlightedInterval",
    "static": true,
    "longname": "src/components/HighlightedInterval.js~HighlightedInterval.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "defaultProps",
    "memberof": "src/components/HighlightedInterval.js~HighlightedInterval",
    "static": true,
    "longname": "src/components/HighlightedInterval.js~HighlightedInterval.defaultProps",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "shouldComponentUpdate",
    "memberof": "src/components/HighlightedInterval.js~HighlightedInterval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HighlightedInterval.js~HighlightedInterval#shouldComponentUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "getStyle",
    "memberof": "src/components/HighlightedInterval.js~HighlightedInterval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HighlightedInterval.js~HighlightedInterval#getStyle",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ object } style"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " object "
      ],
      "spread": false,
      "description": "style"
    },
    "params": []
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "getClassName",
    "memberof": "src/components/HighlightedInterval.js~HighlightedInterval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HighlightedInterval.js~HighlightedInterval#getClassName",
    "access": "public",
    "description": "",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string } className"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": "className"
    },
    "params": []
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HighlightedInterval.js~HighlightedInterval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HighlightedInterval.js~HighlightedInterval#render",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/components/ItemRenderer.js",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport Color from 'color';\nimport {Item} from '../index';\n\nconst ITEM_RENDERER_CLS = 'rct9k-item-renderer';\nconst ITEM_RENDERER_GLOW_CLS = 'rct9k-item-glow';\n\n/**\n * Item (segment) renderer. All the properties of an item are copied as properties of this component. Hence the component\n * doesn't use the property `item`.\n *\n * All the properties have corresponding getter methods. We \"OOP-ize\" them, for the case where a subclass wants to \"override\" a property.\n * Without this pattern, such an override is not doable in React.\n * @extends React.Component<ItemRenderer.propTypes>\n */\nexport default class ItemRenderer extends React.Component {\n  static propTypes = {\n    /**\n     * It's passed by the parent. Though not used by this component. It exists because maybe subclasses want to use it.\n     * @type { Item }\n     */\n    item: PropTypes.object,\n\n    /**\n     * The title (label) of the segment (item).\n     * @type { string }\n     */\n    title: PropTypes.string,\n\n    /**\n     * Tooltip displayed on mouse over the segment (item).\n     * @type { string }\n     */\n    tooltip: PropTypes.string,\n\n    /**\n     * The height of the segment (item).\n     *\n     * This property is received from the parent and its based on `itemHeight` from `Timeline`. The parent adds a padding\n     * (@see rct9k-items-inner class) which must be subtracted from `itemHeight` resulting in `height`.\n     *\n     * NOTE: If you override the getter, the maximum `height` can be `itemHeight` minus the padding.\n     * @type { string | number }\n     */\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n    /**\n     * Used to show a glow effect around the segment (item) when the mouse is moved over the segment (item).\n     * @type { boolean }\n     */\n    glowOnHover: PropTypes.bool,\n\n    /**\n     * The renderer uses a **linear gradient** (top to bottom) as a background. The gradient is configured\n     * using two colors: a base color (`color`) and the base color lightened by a percentage (`gradientBrightness`).\n     * @type { string }\n     */\n    color: PropTypes.string,\n\n    /**\n     * A number between 0 and 1; it represents the percentage by which `color` is lightened to obtain the second color used in the gradient.\n     * @type { number }\n     * /\n    gradientBrightness: PropTypes.number,\n\n    /**\n     * A number between 0 and 100 (percentage from the height of the item) and it represents the point where the first color stops in the gradient.\n     * @type { number }\n     */\n    gradientStop: PropTypes.number,\n\n    /**\n     * Default order of the colors in the gradient: lighter color, base color.\n     * If `true`, the order of the colors will be reversed.\n     * @type { boolean }\n     */\n    gradientReverseDirection: PropTypes.bool,\n\n    /**\n     * The style of the segment used to render the segment (item).\n     * @type { object }\n     */\n    style: PropTypes.object,\n\n    /**\n     * Class name used to render the segment (item).\n     * @type { string }\n     */\n    className: PropTypes.string\n  };\n\n  static defaultProps = {\n    color: '#3791D4',\n    glowOnHover: true,\n    gradientBrightness: 0.45,\n    gradientStop: 40,\n    gradientReverseDirection: false,\n    title: undefined,\n    tooltip: undefined,\n    className: undefined,\n    style: {},\n    item: {}\n  };\n\n  /**\n   * Getter for the corresponding prop, to allow override by subclass.\n   * @returns { string | JSX.Element }\n   */\n  getTitle() {\n    return this.props.title;\n  }\n\n  /**\n   * Getter for the corresponding prop, to allow override by subclass.\n   * @returns { string }\n   */\n  getTooltip() {\n    return this.props.tooltip;\n  }\n\n  /**\n   * Getter for the corresponding prop, to allow override by subclass.\n   * @returns { string | number }\n   */\n  getHeight() {\n    return this.props.height;\n  }\n\n  /**\n   * Getter for the corresponding prop, to allow override by subclass.\n   * @returns { string }\n   */\n  getColor() {\n    return this.props.color;\n  }\n\n  /**\n   * Getter for the corresponding prop, to allow override by subclass.\n   * @returns { number }\n   */\n  getGradientBrightness() {\n    return this.props.gradientBrightness;\n  }\n\n  /**\n   * Getter for the corresponding prop, to allow override by subclass.\n   * @returns { number }\n   */\n  getGradientStop() {\n    return this.props.gradientStop;\n  }\n\n  /**\n   * Getter for the corresponding prop, to allow override by subclass.\n   * @returns { boolean }\n   */\n  getGradientReverseDirection() {\n    return this.props.gradientReverseDirection;\n  }\n\n  /**\n   * Returns the color of the text. This method returns 'white' when the background is darker,\n   * otherwise returns black.\n   * @returns {string}\n   */\n  getTextColor() {\n    return Color(this.getColor()).isLight() ? 'black' : 'white';\n  }\n\n  /**\n   * Create a linear gradient using the base color (calls getColor()) and a color obtained adjusting\n   * the brightness of that color using getGradientBrightness(). The default order of the colors is\n   * [brighter gradient color, gradient color]; this order can be reversed if getGradientReverseDirection() is true.\n   *\n   * By default, the background of an item uses a linear gradient, this method should be overriden if this behaviour is not wanted.\n   * @returns {string} linear gradient\n   */\n  getBackgroundGradient() {\n    let colors = [\n      Color(this.getColor())\n        .lighten(this.getGradientBrightness())\n        .hex(),\n      this.getColor()\n    ];\n    if (this.getGradientReverseDirection()) {\n      colors.reverse();\n    }\n\n    return 'linear-gradient(' + colors[0] + ' ' + this.getGradientStop() + '%, ' + colors[1] + ')';\n  }\n\n  /**\n   * Returns the style of the item.\n   * @returns { object }\n   */\n  getStyle() {\n    return {\n      ...this.props.style,\n      color: this.getTextColor(),\n      height: this.getHeight(),\n      background: this.getBackgroundGradient()\n    };\n  }\n\n  /**\n   * Returns a css class used to apply glow on item hover.\n   * @returns { string }\n   */\n  getGlowOnHoverClassName() {\n    return this.props.glowOnHover ? ITEM_RENDERER_GLOW_CLS : '';\n  }\n\n  /**\n   * Returns the css classes applied on the item.\n   * @returns { string }\n   */\n  getClassName() {\n    return ITEM_RENDERER_CLS + ' ' + this.props.className + ' ' + this.getGlowOnHoverClassName();\n  }\n\n  render() {\n    return (\n      <span className={this.getClassName()} style={this.getStyle()} title={this.getTooltip()}>\n        <span className=\"rct9k-item-renderer-inner\">{this.getTitle()}</span>\n      </span>\n    );\n  }\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/ItemRenderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "ITEM_RENDERER_CLS",
    "memberof": "src/components/ItemRenderer.js",
    "static": true,
    "longname": "src/components/ItemRenderer.js~ITEM_RENDERER_CLS",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/components/ItemRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "ITEM_RENDERER_GLOW_CLS",
    "memberof": "src/components/ItemRenderer.js",
    "static": true,
    "longname": "src/components/ItemRenderer.js~ITEM_RENDERER_GLOW_CLS",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/components/ItemRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "class",
    "name": "ItemRenderer",
    "memberof": "src/components/ItemRenderer.js",
    "static": true,
    "longname": "src/components/ItemRenderer.js~ItemRenderer",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/ItemRenderer.js",
    "importStyle": "ItemRenderer",
    "description": "Item (segment) renderer. All the properties of an item are copied as properties of this component. Hence the component\ndoesn't use the property `item`.\n\nAll the properties have corresponding getter methods. We \"OOP-ize\" them, for the case where a subclass wants to \"override\" a property.\nWithout this pattern, such an override is not doable in React.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "static": true,
    "longname": "src/components/ItemRenderer.js~ItemRenderer.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "defaultProps",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "static": true,
    "longname": "src/components/ItemRenderer.js~ItemRenderer.defaultProps",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "getTitle",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getTitle",
    "access": "public",
    "description": "Getter for the corresponding prop, to allow override by subclass.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string | JSX.Element }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string ",
        " JSX.Element "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "getTooltip",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getTooltip",
    "access": "public",
    "description": "Getter for the corresponding prop, to allow override by subclass.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "getHeight",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getHeight",
    "access": "public",
    "description": "Getter for the corresponding prop, to allow override by subclass.",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string | number }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string ",
        " number "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "getColor",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getColor",
    "access": "public",
    "description": "Getter for the corresponding prop, to allow override by subclass.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "getGradientBrightness",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getGradientBrightness",
    "access": "public",
    "description": "Getter for the corresponding prop, to allow override by subclass.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ number }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " number "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "getGradientStop",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getGradientStop",
    "access": "public",
    "description": "Getter for the corresponding prop, to allow override by subclass.",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ number }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " number "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "getGradientReverseDirection",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getGradientReverseDirection",
    "access": "public",
    "description": "Getter for the corresponding prop, to allow override by subclass.",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ boolean }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " boolean "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "getTextColor",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getTextColor",
    "access": "public",
    "description": "Returns the color of the text. This method returns 'white' when the background is darker,\notherwise returns black.",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "getBackgroundGradient",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getBackgroundGradient",
    "access": "public",
    "description": "Create a linear gradient using the base color (calls getColor()) and a color obtained adjusting\nthe brightness of that color using getGradientBrightness(). The default order of the colors is\n[brighter gradient color, gradient color]; this order can be reversed if getGradientReverseDirection() is true.\n\nBy default, the background of an item uses a linear gradient, this method should be overriden if this behaviour is not wanted.",
    "lineNumber": 179,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} linear gradient"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "linear gradient"
    },
    "params": []
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "getStyle",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getStyle",
    "access": "public",
    "description": "Returns the style of the item.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ object }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " object "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "getGlowOnHoverClassName",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getGlowOnHoverClassName",
    "access": "public",
    "description": "Returns a css class used to apply glow on item hover.",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "getClassName",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#getClassName",
    "access": "public",
    "description": "Returns the css classes applied on the item.",
    "lineNumber": 218,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/ItemRenderer.js~ItemRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/ItemRenderer.js~ItemRenderer#render",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/components/ItemRenderer.test.js",
    "content": "'use strict';\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {expect} from 'chai';\n\nimport ItemRenderer from './ItemRenderer';\n\ndescribe('Item renderer', () => {\n  it('should render the item', () => {\n    const item = {title: 'my_test'};\n    const component = shallow(<ItemRenderer {...item} item={item} />);\n    expect(component.text()).to.contain('my_test');\n  });\n});\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/ItemRenderer.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/components/Marker.js",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport {convertDateToMoment} from '../utils/timeUtils';\n\n/**\n * A `Marker` is a component draws a vertical line.\n *\n * @extends React.Component<Marker.propTypes>\n */\nexport class Marker extends React.Component {\n  static propTypes = {\n    /**\n     * The position of the marker, as date (numeric/millis or moment object, cf. `Timeline.props.useMoment`).\n     *\n     * @type { object | number }\n     */\n    date: PropTypes.oneOfType([PropTypes.object, PropTypes.number]).isRequired,\n\n    /**\n     * Class name used to render the marker.\n     *\n     * @type { string }\n     */\n    className: PropTypes.string,\n\n    /**\n     * Style used to render the marker.\n     *\n     * @type { object }\n     */\n    style: PropTypes.object,\n\n    /**\n     * Internal (passed by parent). The height of the marker.\n     *\n     * @type { number }\n     */\n    height: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). `Marker` uses absolute positioning, thus it needs the `top` property\n     * to set the top edge if the element.\n     *\n     * @type { number }\n     */\n    top: PropTypes.number,\n\n    /**\n     * Internal (passed by parent). This function allows the conversion of `date` (time) property to pixels.\n     *\n     * @type { Function }\n     */\n    calculateHorizontalPosition: PropTypes.func.isRequired,\n\n    /**\n     * Internal (passed by parent). If true timeline will try to minimize re-renders (e.g: the displayed timeline interval changes).\n     *\n     * @type { boolean }\n     */\n    shouldUpdate: PropTypes.bool\n  };\n\n  static defaultProps = {\n    className: '',\n    style: undefined,\n    height: undefined,\n    top: undefined,\n    calculateHorizontalPosition: () => {},\n    shouldUpdate: false\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (\n      nextProps.shouldUpdate ||\n      this.props.height !== nextProps.height ||\n      this.props.top !== nextProps.top ||\n      !convertDateToMoment(this.props.date).isSame(convertDateToMoment(nextProps.date).valueOf())\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns { object } style\n   */\n  getStyle() {\n    const {left} = this.props.calculateHorizontalPosition(this.props.date);\n    return {\n      ...this.props.style,\n      top: this.props.top,\n      height: this.props.height,\n      left,\n      display: left ? 'block' : 'none'\n    };\n  }\n\n  /**\n   * @returns { string } className\n   */\n  getClassName() {\n    return `rct9k-marker ${this.props.className}`;\n  }\n\n  render() {\n    return <hr className={this.getClassName()} style={this.getStyle()} />;\n  }\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/Marker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "class",
    "name": "Marker",
    "memberof": "src/components/Marker.js",
    "static": true,
    "longname": "src/components/Marker.js~Marker",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/Marker.js",
    "importStyle": "{Marker}",
    "description": "A `Marker` is a component draws a vertical line.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/components/Marker.js~Marker",
    "static": true,
    "longname": "src/components/Marker.js~Marker.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "defaultProps",
    "memberof": "src/components/Marker.js~Marker",
    "static": true,
    "longname": "src/components/Marker.js~Marker.defaultProps",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "shouldComponentUpdate",
    "memberof": "src/components/Marker.js~Marker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Marker.js~Marker#shouldComponentUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "getStyle",
    "memberof": "src/components/Marker.js~Marker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Marker.js~Marker#getStyle",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ object } style"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " object "
      ],
      "spread": false,
      "description": "style"
    },
    "params": []
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "getClassName",
    "memberof": "src/components/Marker.js~Marker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Marker.js~Marker#getClassName",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ string } className"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " string "
      ],
      "spread": false,
      "description": "className"
    },
    "params": []
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Marker.js~Marker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Marker.js~Marker#render",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/components/body.js",
    "content": "/**\n * Timeline body/grid\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Grid} from 'react-virtualized';\n\n/**\n * @extends Component<TimelineBody.propTypes>\n */\nclass TimelineBody extends Component {\n  componentDidMount() {\n    this.forceUpdate();\n  }\n  shouldComponentUpdate(nextProps) {\n    const {props} = this;\n    if (!props.shallowUpdateCheck) {\n      return true;\n    }\n\n    if (props.columnCount !== nextProps.columnCount) {\n      return true;\n    }\n\n    // prettier-ignore\n    const shallowChange = props.height !== nextProps.height\n      || props.width !== nextProps.width\n      || props.rowCount !== nextProps.rowCount;\n\n    if (props.forceRedrawFunc) {\n      return shallowChange || props.forceRedrawFunc(props, nextProps);\n    }\n\n    return shallowChange;\n  }\n  render() {\n    const {width, columnWidth, height, rowHeight, rowCount, columnCount} = this.props;\n    const {grid_ref_callback, cellRenderer} = this.props;\n\n    return (\n      <Grid\n        ref={grid_ref_callback}\n        autoContainerWidth\n        cellRenderer={cellRenderer}\n        columnCount={columnCount}\n        columnWidth={columnWidth}\n        height={height}\n        rowCount={rowCount}\n        rowHeight={rowHeight}\n        width={width}\n        className=\"rct9k-grid\"\n      />\n    );\n  }\n}\n\nTimelineBody.propTypes = {\n  /**\n   * The total width of the body; mandatory field.\n   * @type { number }\n   */\n  width: PropTypes.number.isRequired,\n\n  /**\n   * Function that returns the width of each column, mandatory field.\n   * @type { Function }\n   */\n  columnWidth: PropTypes.func.isRequired,\n\n  /**\n   * The total number of columns, including the timeline (gantt).\n   * @type { number }\n   */\n  columnCount: PropTypes.number,\n\n  /**\n   * The total height of the body (without timebar), mandatory field.\n   * @type { number }\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Function that returns the height for each row, mandatory field.\n   * @type { Function }\n   */\n  rowHeight: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows in timeline, mandatory field.\n   * @type { number }\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * @type { Function }\n   */\n  grid_ref_callback: PropTypes.func.isRequired,\n\n  /**\n   * Renderer for each cell of the grid.\n   * @type { Function }\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * As e.g. @see Timeline.props.shallowUpdateCheck\n   * @type { boolean }\n   */\n  shallowUpdateCheck: PropTypes.bool,\n\n  /**\n   * As e.g. @see Timeline.props.forceRedrawFunc\n   * @type { Function }\n   */\n  forceRedrawFunc: PropTypes.func\n};\n\nTimelineBody.defaultProps = {\n  columnCount: 2,\n  shallowUpdateCheck: false,\n  forceRedrawFunc: null\n};\nexport default TimelineBody;\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/body.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "TimelineBody",
    "memberof": "src/components/body.js",
    "static": true,
    "longname": "src/components/body.js~TimelineBody",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/body.js",
    "importStyle": "TimelineBody",
    "description": "",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/body.js~TimelineBody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/body.js~TimelineBody#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "shouldComponentUpdate",
    "memberof": "src/components/body.js~TimelineBody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/body.js~TimelineBody#shouldComponentUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/body.js~TimelineBody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/body.js~TimelineBody#render",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/components/selector.js",
    "content": "'use strict';\nimport React from 'react';\n\n/**\n * Component to show a selection box (like on windows desktop)\n */\nexport default class SelectBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.curX = 0;\n    this.curY = 0;\n    this.startX = 0;\n    this.startY = 0;\n  }\n\n  /**\n   * Create the selection box\n   * @param {number} x Starting x coordinate for selection box\n   * @param {number} y Starting y coordinate for selection box\n   */\n  start(x, y) {\n    this.startX = x;\n    this.startY = y;\n    this.curX = 0;\n    this.curY = 0;\n  }\n\n  /**\n   * Update the selection box as the mouse moves\n   * @param {number} x The current X coordinate of the mouse\n   * @param {number} y The current Y coordinate of the mouse\n   */\n  move(x, y) {\n    this.curX = x;\n    this.curY = y;\n    this.forceUpdate();\n  }\n\n  /**\n   * Generally on mouse up.\n   * Finish the selection box and return the rectangle created\n   * @returns {Object} The selection rectangle\n   * @property {number} top The top y coordinate\n   * @property {number} left The left x coordinate\n   * @property {number} width The width of the box\n   * @property {number} height The height of the box\n   */\n  end() {\n    const {startX, startY, curX, curY} = this;\n    const left = Math.min(startX, curX);\n    const top = Math.min(startY, curY);\n    const width = Math.abs(startX - curX);\n    const height = Math.abs(startY - curY);\n    let toReturn = {left, top, width, height};\n\n    this.startX = 0;\n    this.startY = 0;\n    this.curX = 0;\n    this.curY = 0;\n    this.forceUpdate();\n    return toReturn;\n  }\n\n  /**\n   * @ignore\n   */\n  render() {\n    const {startX, startY, curX, curY} = this;\n    const left = Math.min(startX, curX);\n    const top = Math.min(startY, curY);\n    const width = Math.abs(startX - curX);\n    const height = Math.abs(startY - curY);\n    let style = {left, top, width, height};\n    return <div className=\"rct9k-selector-outer\" style={style} />;\n  }\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/selector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "SelectBox",
    "memberof": "src/components/selector.js",
    "static": true,
    "longname": "src/components/selector.js~SelectBox",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/selector.js",
    "importStyle": "SelectBox",
    "description": "Component to show a selection box (like on windows desktop)",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/selector.js~SelectBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/selector.js~SelectBox#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "curX",
    "memberof": "src/components/selector.js~SelectBox",
    "static": false,
    "longname": "src/components/selector.js~SelectBox#curX",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "curY",
    "memberof": "src/components/selector.js~SelectBox",
    "static": false,
    "longname": "src/components/selector.js~SelectBox#curY",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "startX",
    "memberof": "src/components/selector.js~SelectBox",
    "static": false,
    "longname": "src/components/selector.js~SelectBox#startX",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "startY",
    "memberof": "src/components/selector.js~SelectBox",
    "static": false,
    "longname": "src/components/selector.js~SelectBox#startY",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "start",
    "memberof": "src/components/selector.js~SelectBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/selector.js~SelectBox#start",
    "access": "public",
    "description": "Create the selection box",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Starting x coordinate for selection box"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Starting y coordinate for selection box"
      }
    ],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "move",
    "memberof": "src/components/selector.js~SelectBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/selector.js~SelectBox#move",
    "access": "public",
    "description": "Update the selection box as the mouse moves",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The current X coordinate of the mouse"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The current Y coordinate of the mouse"
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "end",
    "memberof": "src/components/selector.js~SelectBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/selector.js~SelectBox#end",
    "access": "public",
    "description": "Generally on mouse up.\nFinish the selection box and return the rectangle created",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} The selection rectangle"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "top",
        "description": "The top y coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": "The left x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "The width of the box"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The height of the box"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The selection rectangle"
    },
    "params": []
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/selector.js~SelectBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/selector.js~SelectBox#render",
    "access": "public",
    "description": "",
    "lineNumber": 67,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/components/selector.test.js",
    "content": "'use strict';\nimport React from 'react';\nimport {shallow, mount} from 'enzyme';\nimport {expect} from 'chai';\n\nimport setup from 'setupTests';\nimport SelectBox from './selector';\n\ndescribe('Selector', () => {\n  it('should initialize to 0,0', () => {\n    const component = shallow(<SelectBox />);\n    const instance = component.instance();\n    expect(instance.startX).to.equal(0);\n    expect(instance.startY).to.equal(0);\n    expect(instance.curX).to.equal(0);\n    expect(instance.curY).to.equal(0);\n  });\n  it('should set start coordinates correctly', () => {\n    const component = shallow(<SelectBox />);\n    const instance = component.instance();\n    instance.start(33, 44);\n    expect(instance.startX).to.equal(33);\n    expect(instance.startY).to.equal(44);\n    expect(instance.curX).to.equal(0);\n    expect(instance.curY).to.equal(0);\n  });\n  it('should set move coordinates correctly', () => {\n    const component = shallow(<SelectBox />);\n    const instance = component.instance();\n    instance.start(33, 44);\n    instance.move(55, 66);\n    expect(instance.startX).to.equal(33);\n    expect(instance.startY).to.equal(44);\n    expect(instance.curX).to.equal(55);\n    expect(instance.curY).to.equal(66);\n  });\n  it('should return correct coordinates on end', () => {\n    const component = shallow(<SelectBox />);\n    const instance = component.instance();\n    instance.start(33, 44);\n    instance.move(55, 45);\n    const endReturn = instance.end();\n    expect(endReturn).to.deep.equal({left: 33, top: 44, width: 22, height: 1});\n  });\n  it('should reset coordinates on end', () => {\n    const component = shallow(<SelectBox />);\n    const instance = component.instance();\n    instance.start(33, 44);\n    instance.move(55, 45);\n    const endReturn = instance.end();\n    expect(instance.startX).to.equal(0);\n    expect(instance.startY).to.equal(0);\n    expect(instance.curX).to.equal(0);\n    expect(instance.curY).to.equal(0);\n  });\n});\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/selector.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/components/timebar.js",
    "content": "'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport {intToPix} from '../utils/commonUtils';\nimport {ColumnHeaderRenderer} from './ColumnRenderer';\nimport {timebarFormat as defaultTimebarFormat} from '../consts/timebarConsts';\nimport {Column} from '../index';\n\n/**\n * Timebar component - displays the current time on top of the timeline.\n * @extends React.Component<Timebar.propTypes>\n */\nexport default class Timebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {topBarComponent: [], bottomBarComponent: [], resolution: {}};\n\n    this.guessResolution = this.guessResolution.bind(this);\n    this.renderBar = this.renderBar.bind(this);\n  }\n\n  componentWillMount() {\n    this.guessResolution();\n    const bottomBarComponent = this.getBottomBar();\n    const topBarComponent = this.getTopBar();\n    this.setState({topBarComponent, bottomBarComponent});\n  }\n\n  /**\n   * On new props we check if a resolution is given, and if not we guess one\n   * @param {Object} nextProps Props coming in\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.top_resolution && nextProps.bottom_resolution) {\n      this.setState({resolution: {top: nextProps.top_resolution, bottom: nextProps.bottom_resolution}});\n    } else {\n      this.guessResolution(nextProps.start, nextProps.end);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !this.props.start.isSame(prevProps.start) ||\n      !this.props.end.isSame(prevProps.end) ||\n      this.props.timeFormats !== prevProps.timeFormats ||\n      this.props.top_resolution !== prevProps.top_resolution ||\n      this.props.bottom_resolution !== prevProps.bottom_resolution ||\n      this.props.width !== prevProps.width ||\n      this.props.leftOffset !== prevProps.leftOffset\n    ) {\n      const bottomBarComponent = this.getBottomBar();\n      const topBarComponent = this.getTopBar();\n      this.setState({topBarComponent, bottomBarComponent});\n    }\n  }\n\n  /**\n   * Attempts to guess the resolution of the top and bottom halves of the timebar based on the viewable date range.\n   * Sets resolution to state.\n   * @param {moment} start Start date for the timebar\n   * @param {moment} end End date for the timebar\n   */\n  guessResolution(start, end) {\n    if (!start || !end) {\n      start = this.props.start;\n      end = this.props.end;\n    }\n    const durationMilliSecs = end.diff(start);\n    /// 1ms -> 1s\n    if (durationMilliSecs <= 1000) this.setState({resolution: {top: 'second', bottom: 'millisecond'}});\n    // 1s  -> 2m\n    else if (durationMilliSecs <= 60 * 2 * 1000) this.setState({resolution: {top: 'minute', bottom: 'second'}});\n    // 2m -> 2h\n    else if (durationMilliSecs <= 60 * 60 * 2 * 1000) this.setState({resolution: {top: 'hour', bottom: 'minute'}});\n    // 2h -> 3d\n    else if (durationMilliSecs <= 24 * 60 * 60 * 3 * 1000) this.setState({resolution: {top: 'day', bottom: 'hour'}});\n    // 1d -> 30d\n    else if (durationMilliSecs <= 30 * 24 * 60 * 60 * 1000) this.setState({resolution: {top: 'month', bottom: 'day'}});\n    //30d -> 1y\n    else if (durationMilliSecs <= 365 * 24 * 60 * 60 * 1000)\n      this.setState({resolution: {top: 'year', bottom: 'month'}});\n    // 1y ->\n    else this.setState({resolution: {top: 'year', bottom: 'year'}});\n  }\n\n  /**\n   * Calculates the top bar.\n   * @returns {Object} JSX for top menu bar - based of time format & resolution\n   */\n  getTopBar() {\n    let res = this.state.resolution.top;\n    return this.renderBar({format: this.props.timeFormats.majorLabels[res], type: res});\n  }\n\n  /**\n   * Calculates the bottom bar.\n   * @returns {Object} JSX for bottom menu bar - based of time format & resolution\n   */\n  getBottomBar() {\n    let res = this.state.resolution.bottom;\n    const bottomBar = this.renderBar({format: this.props.timeFormats.minorLabels[res], type: res});\n    this.props.setVerticalGridLines(bottomBar);\n    return bottomBar;\n  }\n\n  /**\n   * Gets the number of pixels per segment of the timebar section (using the resolution)\n   * @param {moment} date The date being rendered. This is used to figure out how many days are in the month\n   * @param {string} resolutionType Timebar section resolution [Year; Month...]\n   * @returns {number} The number of pixels per segment\n   */\n  getPixelIncrement(date, resolutionType, offset = 0) {\n    const {start, end} = this.props;\n    const width = this.props.width - this.props.leftOffset;\n\n    const start_end_ms = end.diff(start, 'milliseconds');\n    const pixels_per_ms = width / start_end_ms;\n    function isLeapYear(year) {\n      return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n    }\n    const daysInYear = isLeapYear(date.year()) ? 366 : 365;\n    let inc = width;\n    switch (resolutionType) {\n      case 'year':\n        inc = pixels_per_ms * 1000 * 60 * 60 * 24 * (daysInYear - offset);\n        break;\n      case 'month':\n        inc = pixels_per_ms * 1000 * 60 * 60 * 24 * (date.daysInMonth() - offset);\n        break;\n      case 'day':\n        inc = pixels_per_ms * 1000 * 60 * 60 * (24 - offset);\n        break;\n      case 'hour':\n        inc = pixels_per_ms * 1000 * 60 * (60 - offset);\n        break;\n      case 'minute':\n        inc = pixels_per_ms * 1000 * 60 - offset;\n        break;\n      case 'second':\n        inc = pixels_per_ms * 1000 - offset;\n        break;\n      case 'millisecond':\n        inc = pixels_per_ms - offset;\n        break;\n      default:\n        break;\n    }\n    return Math.min(inc, width);\n  }\n\n  /**\n   * Renders an entire segment of the timebar (top or bottom)\n   * @param {string} resolution The resolution to render at [Year; Month...]\n   * @returns {Object[]} A list of sections (making up a segment) to be rendered\n   * @property {string} label The text displayed in the section (usually the date/time)\n   * @property {boolean} isSelected Whether the section is being 'touched' when dragging/resizing\n   * @property {number} size The number of pixels the segment will take up\n   * @property {number|string} key Key for react\n   */\n  renderBar(resolution) {\n    const {start, end, selectedRanges} = this.props;\n    const width = this.props.width - this.props.leftOffset;\n\n    let currentDate = start.clone();\n    let timeIncrements = [];\n    let pixelsLeft = width;\n    let labelSizeLimit = 60;\n\n    function _addTimeIncrement(initialOffset, offsetType, stepFunc) {\n      let offset = null;\n      while (currentDate.isBefore(end) && pixelsLeft > 0) {\n        // if this is the first 'block' it may be cut off at the start\n        if (pixelsLeft === width) {\n          offset = initialOffset;\n        } else {\n          offset = moment.duration(0);\n        }\n        let pixelIncrements = Math.min(\n          this.getPixelIncrement(currentDate, resolution.type, offset.as(offsetType)),\n          pixelsLeft\n        );\n        const labelSize = pixelIncrements < labelSizeLimit ? 'short' : 'long';\n        let label = currentDate.format(resolution.format[labelSize]);\n        let isSelected = _.some(selectedRanges, s => {\n          return (\n            currentDate.isSameOrAfter(s.start.clone().startOf(resolution.type)) &&\n            currentDate.isSameOrBefore(s.end.clone().startOf(resolution.type))\n          );\n        });\n        timeIncrements.push({label, isSelected, size: pixelIncrements, key: pixelsLeft});\n        stepFunc(currentDate, offset);\n        pixelsLeft -= pixelIncrements;\n      }\n    }\n\n    const addTimeIncrement = _addTimeIncrement.bind(this);\n\n    if (resolution.type === 'year') {\n      const offset = moment.duration(currentDate.diff(currentDate.clone().startOf('year')));\n      addTimeIncrement(offset, 'months', (currentDt, offst) => currentDt.subtract(offst).add(1, 'year'));\n    } else if (resolution.type === 'month') {\n      const offset = moment.duration(currentDate.diff(currentDate.clone().startOf('month')));\n      addTimeIncrement(offset, 'days', (currentDt, offst) => currentDt.subtract(offst).add(1, 'month'));\n    } else if (resolution.type === 'day') {\n      const offset = moment.duration(currentDate.diff(currentDate.clone().startOf('day')));\n      addTimeIncrement(offset, 'hours', (currentDt, offst) => currentDt.subtract(offst).add(1, 'days'));\n    } else if (resolution.type === 'hour') {\n      const offset = moment.duration(currentDate.diff(currentDate.clone().startOf('hour')));\n      addTimeIncrement(offset, 'minutes', (currentDt, offst) => currentDt.subtract(offst).add(1, 'hours'));\n    } else if (resolution.type === 'minute') {\n      const offset = moment.duration(currentDate.diff(currentDate.clone().startOf('minute')));\n      addTimeIncrement(offset, 'minutes', (currentDt, offst) => currentDt.subtract(offst).add(1, 'minutes'));\n    } else if (resolution.type === 'second') {\n      const offset = moment.duration(currentDate.diff(currentDate.clone().startOf('second')));\n      addTimeIncrement(offset, 'second', (currentDt, offst) => currentDt.subtract(offst).add(1, 'seconds'));\n    } else if (resolution.type === 'millisecond') {\n      addTimeIncrement(moment.duration(0), 'millisecond', (currentDt, offst) => currentDt.add(1, 'milliseconds'));\n    }\n    return timeIncrements;\n  }\n\n  /**\n   * It renders the header of a column in multi columns mode. Default renderer: props.groupTitleRenderer;\n   * which may be overriden per column: column.headerRender (react element or function).\n   * @param {object} column\n   */\n  renderColumnHeader(column, index) {\n    const columnWidth = column.width ? column.width : this.props.groupOffset;\n    return (\n      <div className=\"rct9k-timebar-group-title\" key={index} style={{width: columnWidth}}>\n        {column.headerRenderer ? (\n          React.isValidElement(column.headerRenderer) ? (\n            column.headerRenderer\n          ) : (\n            <column.headerRenderer />\n          )\n        ) : (\n          <this.props.groupTitleRenderer column={column} />\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Renders the timebar\n   * @returns {Object} Timebar component\n   */\n  render() {\n    const {cursorTime, tableColumns} = this.props;\n    const {topBarComponent, bottomBarComponent} = this.state;\n    const GroupTitleRenderer = this.props.groupTitleRenderer;\n\n    // Only show the cursor on 1 of the top bar segments\n    // Pick the segment that has the biggest size\n    let topBarCursorKey = null;\n    if (topBarComponent.length > 1 && topBarComponent[1].size > topBarComponent[0].size)\n      topBarCursorKey = topBarComponent[1].key;\n    else if (topBarComponent.length > 0) topBarCursorKey = topBarComponent[0].key;\n\n    return (\n      <div className=\"rct9k-timebar\" style={{width: this.props.width}}>\n        {/* Single column mode */}\n        {(!tableColumns || tableColumns.length == 0) && (\n          <div className=\"rct9k-timebar-group-title\" style={{width: this.props.leftOffset}}>\n            <GroupTitleRenderer />\n          </div>\n        )}\n        {/* Multiple columns mode */}\n        {tableColumns &&\n          tableColumns.length > 0 &&\n          tableColumns.map((column, index) => {\n            return this.renderColumnHeader(column, index);\n          })}\n        <div className=\"rct9k-timebar-outer\" style={{width: this.props.width - this.props.leftOffset}}>\n          <div className=\"rct9k-timebar-inner rct9k-timebar-inner-top\">\n            {_.map(topBarComponent, i => {\n              let topLabel = i.label;\n              if (cursorTime && i.key === topBarCursorKey) {\n                topLabel += ` [${cursorTime}]`;\n              }\n              let className = 'rct9k-timebar-item';\n              if (i.isSelected) className += ' rct9k-timebar-item-selected';\n              return (\n                <span className={className} key={i.key} style={{width: intToPix(i.size)}}>\n                  {topLabel}\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"rct9k-timebar-inner rct9k-timebar-inner-bottom\">\n            {_.map(bottomBarComponent, i => {\n              let className = 'rct9k-timebar-item';\n              if (i.isSelected) className += ' rct9k-timebar-item-selected';\n              return (\n                <span className={className} key={i.key} style={{width: intToPix(i.size)}}>\n                  {i.label}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimebar.propTypes = {\n  /**\n   * @type { any }\n   */\n  cursorTime: PropTypes.any,\n\n  /**\n   * As e.g. @see Timeline.props.groupTitleRenderer\n   * @type { Function }\n   */\n  groupTitleRenderer: PropTypes.func,\n\n  /**\n   * Start of the displayed interval, as moment object.\n   * @type { object }\n   */\n  start: PropTypes.object.isRequired,\n\n  /**\n   * End of the displayed interval, as moment object.\n   * @type { object }\n   */\n  end: PropTypes.object.isRequired,\n\n  /**\n   * Total width of the timeline (gantt), mandatory field.\n   * @type { number }\n   */\n  width: PropTypes.number.isRequired,\n\n  /**\n   * The left side offset, this offset is subtracted from the total width of the timeline\n   * to obtain the width of the timebar.\n   * @type { number }\n   */\n  leftOffset: PropTypes.number,\n\n  /**\n   * The time unit for the top timebar.\n   * @type { string }\n   */\n  top_resolution: PropTypes.string,\n\n  /**\n   * The time unit for the bottom timebar.\n   * @type { string }\n   */\n  bottom_resolution: PropTypes.string,\n\n  /**\n   * @type { Array.<object> }\n   */\n  selectedRanges: PropTypes.arrayOf(PropTypes.object), // [start: moment ,end: moment (end)]\n\n  /**\n   * Formats for each time unit (@see defaultTimebarFormat)\n   * @type { object }\n   */\n  timeFormats: PropTypes.object,\n\n  /**\n   * @type { Array.<Column> }\n   */\n  tableColumns: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * It's passed by parent. The `vertical grid` uses the same intervals as the bottom timebar, it is redundant to calculated them again.\n   * This callback passes these intervals to parent.\n   * @type { Function }\n   */\n  setVerticalGridLines: PropTypes.func\n};\n\nTimebar.defaultProps = {\n  selectedRanges: [],\n  groupTitleRenderer: ColumnHeaderRenderer,\n  leftOffset: 0,\n  timeFormats: defaultTimebarFormat,\n  tableColumns: [],\n  top_resolution: undefined,\n  bottom_resolution: undefined,\n  leftOffset: undefined,\n  cursorTime: undefined\n};\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/components/timebar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "class",
    "name": "Timebar",
    "memberof": "src/components/timebar.js",
    "static": true,
    "longname": "src/components/timebar.js~Timebar",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/components/timebar.js",
    "importStyle": "Timebar",
    "description": "Timebar component - displays the current time on top of the timeline.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 138,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/timebar.js~Timebar",
    "static": false,
    "longname": "src/components/timebar.js~Timebar#state",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"topBarComponent\": *, \"bottomBarComponent\": *, \"resolution\": *}"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#componentWillReceiveProps",
    "access": "public",
    "description": "On new props we check if a resolution is given, and if not we guess one",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "nextProps",
        "description": "Props coming in"
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "guessResolution",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#guessResolution",
    "access": "public",
    "description": "Attempts to guess the resolution of the top and bottom halves of the timebar based on the viewable date range.\nSets resolution to state.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "Start date for the timebar"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "End date for the timebar"
      }
    ],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "getTopBar",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#getTopBar",
    "access": "public",
    "description": "Calculates the top bar.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} JSX for top menu bar - based of time format & resolution"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "JSX for top menu bar - based of time format & resolution"
    },
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "getBottomBar",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#getBottomBar",
    "access": "public",
    "description": "Calculates the bottom bar.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} JSX for bottom menu bar - based of time format & resolution"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "JSX for bottom menu bar - based of time format & resolution"
    },
    "params": []
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "getPixelIncrement",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#getPixelIncrement",
    "access": "public",
    "description": "Gets the number of pixels per segment of the timebar section (using the resolution)",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The number of pixels per segment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "date",
        "description": "The date being rendered. This is used to figure out how many days are in the month"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resolutionType",
        "description": "Timebar section resolution [Year; Month...]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The number of pixels per segment"
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "renderBar",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#renderBar",
    "access": "public",
    "description": "Renders an entire segment of the timebar (top or bottom)",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object[]} A list of sections (making up a segment) to be rendered"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resolution",
        "description": "The resolution to render at [Year; Month...]"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "The text displayed in the section (usually the date/time)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isSelected",
        "description": "Whether the section is being 'touched' when dragging/resizing"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "The number of pixels the segment will take up"
      },
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Key for react"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": "A list of sections (making up a segment) to be rendered"
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "renderColumnHeader",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#renderColumnHeader",
    "access": "public",
    "description": "It renders the header of a column in multi columns mode. Default renderer: props.groupTitleRenderer;\nwhich may be overriden per column: column.headerRender (react element or function).",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "column",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/timebar.js~Timebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/timebar.js~Timebar#render",
    "access": "public",
    "description": "Renders the timebar",
    "lineNumber": 251,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Timebar component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Timebar component"
    },
    "params": []
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/consts/timebarConsts.js",
    "content": "/**\n * Default timebar format\n */\nexport const timebarFormat = {\n  majorLabels: {\n    millisecond: {\n      short: 'SSS', //001\n      long: 'mm:ss.SSS' //01:10.001\n    },\n    second: {\n      short: 'ss', //10\n      long: 'HH:mm:ss' //01:10\n    },\n    minute: {\n      short: 'mm', //01\n      long: 'HH:mm' //12:01\n    },\n    hour: {\n      short: 'HH', //13\n      long: 'HH:mm' //13:00\n    },\n    day: {\n      short: 'Do', //1st\n      long: 'ddd, LL' //Sun, July 3, 2018\n    },\n    month: {\n      short: 'MMM', //Jan\n      long: 'MMMM YYYY' //January 2018\n    },\n    year: {\n      short: 'YYYY', //2018\n      long: 'YYYY' //2018\n    }\n  },\n  minorLabels: {\n    millisecond: {\n      short: 'SSS', //001\n      long: 'mm:ss.SSS' //01:10.001\n    },\n    second: {\n      short: 'ss', //10\n      long: 'HH:mm:ss' //01:10\n    },\n    minute: {\n      short: 'mm', //01\n      long: 'HH:mm' //12:01\n    },\n    hour: {\n      short: 'HH', //13\n      long: 'HH:mm' //13:00\n    },\n    day: {\n      short: 'D', //1\n      long: 'ddd Do' //Sun 1st\n    },\n    month: {\n      short: 'MM', //02\n      long: 'MMMM' //January\n    },\n    year: {\n      short: 'YYYY', //2018\n      long: 'YYYY' //2018\n    }\n  }\n};\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/consts/timebarConsts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "timebarFormat",
    "memberof": "src/consts/timebarConsts.js",
    "static": true,
    "longname": "src/consts/timebarConsts.js~timebarFormat",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/consts/timebarConsts.js",
    "importStyle": "{timebarFormat}",
    "description": "Default timebar format",
    "lineNumber": 4,
    "type": {
      "types": [
        "{\"majorLabels\": *, \"minorLabels\": *}"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/index.js",
    "content": "'use strict';\n\nexport {default as Timeline} from './timeline';\nexport * from './types';\n\n// components\nexport {default as Timebar} from './components/timebar';\nexport {default as TimelineBody} from './components/body';\nexport {default as ItemRenderer} from './components/ItemRenderer';\nexport {GroupRenderer} from './components/GroupRenderer';\nexport {ColumnHeaderRenderer} from './components/ColumnRenderer';\nexport {Marker} from './components/Marker';\nexport {default as Selectbox} from './components/selector';\nexport {BackgroundLayer} from './components/BackgroundLayer';\nexport {HighlightedInterval} from './components/HighlightedInterval';\n\n// consts\nexport {timebarFormat} from './consts/timebarConsts';\n\n// utils\nexport * from './utils/commonUtils';\nexport * from './utils/itemUtils';\nexport * from './utils/timeUtils';\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "src/setupTests.js",
    "content": "import Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport {expect} from 'chai';\n\nimport jsdom from 'jsdom';\n\nlet consoleEr = '';\nlet consoleWa = '';\n\nfunction setUpDomEnvironment() {\n  const {JSDOM} = jsdom;\n  const dom = new JSDOM('<!doctype html><html><body></body></html>', {url: 'http://localhost/'});\n  const {window} = dom;\n\n  global.window = window;\n  global.document = window.document;\n  global.navigator = {\n    userAgent: 'node.js'\n  };\n  global.console.error = e => (consoleEr += e);\n  global.console.warn = e => (consoleWa += e);\n  global.console.warning = e => (consoleWa += e);\n  copyProps(window, global);\n}\n\nfunction copyProps(src, target) {\n  const props = Object.getOwnPropertyNames(src)\n    .filter(prop => typeof target[prop] === 'undefined')\n    .map(prop => Object.getOwnPropertyDescriptor(src, prop));\n  Object.defineProperties(target, props);\n}\n\nbeforeEach(function() {\n  consoleEr = '';\n  consoleWa = '';\n});\nafterEach(function() {\n  expect(consoleEr).to.equal('');\n  expect(consoleWa).to.equal('');\n});\nsetUpDomEnvironment();\nEnzyme.configure({adapter: new Adapter()});\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/setupTests.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "consoleEr",
    "memberof": "src/setupTests.js",
    "static": true,
    "longname": "src/setupTests.js~consoleEr",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/setupTests.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "consoleWa",
    "memberof": "src/setupTests.js",
    "static": true,
    "longname": "src/setupTests.js~consoleWa",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/setupTests.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "setUpDomEnvironment",
    "memberof": "src/setupTests.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/setupTests.js~setUpDomEnvironment",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/setupTests.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "copyProps",
    "memberof": "src/setupTests.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/setupTests.js~copyProps",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/setupTests.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      },
      {
        "name": "target",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/stories/StorybookUtils.js",
    "content": "/**\n * It returns an URI to API Doc story.\n * Furthermore, it receives a subpath to reference a component/method from\n * API documentation.\n *\n * @param {string} subpath\n */\nexport const encodeApiDocURIForSubpath = subpath => {\n  return '?path=/docs/api-doc--page&subpath=' + encodeURIComponent(subpath);\n};\n\nexport const parametersDocPage = {\n  viewMode: 'docs',\n  previewTabs: {\n    'storybook/docs/panel': {\n      hidden: false\n    },\n    canvas: {\n      hidden: true\n    }\n  }\n};\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/stories/StorybookUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "encodeApiDocURIForSubpath",
    "memberof": "src/stories/StorybookUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stories/StorybookUtils.js~encodeApiDocURIForSubpath",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/stories/StorybookUtils.js",
    "importStyle": "{encodeApiDocURIForSubpath}",
    "description": "It returns an URI to API Doc story.\nFurthermore, it receives a subpath to reference a component/method from\nAPI documentation.",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "subpath",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "parametersDocPage",
    "memberof": "src/stories/StorybookUtils.js",
    "static": true,
    "longname": "src/stories/StorybookUtils.js~parametersDocPage",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/stories/StorybookUtils.js",
    "importStyle": "{parametersDocPage}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"viewMode\": string, \"previewTabs\": *}"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/stories/backgroundLayer/BackgroundLayerScenarios.js",
    "content": "export const backgroundLayerScenarios = {\n  // BackgroundLayer\n  highlightWeekends: 'PROPERTY highlightWeekends',\n  highlightWeekendsClassName: 'PROPERTY highlightWeekendsClassName',\n  nowMarker: 'PROPERTY nowMarker',\n  nowMarkerClassName: 'PROPERTY nowMarkerClassName',\n  verticalGrid: 'PROPERTY verticalGrid',\n  verticalGridClassName: 'PROPERTY verticalGridClassName',\n  markers: 'PROPERTY markers',\n  highlightedIntervals: 'PROPERTY highlightedIntervals',\n\n  // HighlightedInterval\n  highlightedIntervalClassName: 'PROPERTY className FOR HighlightedInterval',\n\n  // Marker\n  classNameForMarker: 'PROPERTY className FOR Marker'\n};\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/stories/backgroundLayer/BackgroundLayerScenarios.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "backgroundLayerScenarios",
    "memberof": "src/stories/backgroundLayer/BackgroundLayerScenarios.js",
    "static": true,
    "longname": "src/stories/backgroundLayer/BackgroundLayerScenarios.js~backgroundLayerScenarios",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/stories/backgroundLayer/BackgroundLayerScenarios.js",
    "importStyle": "{backgroundLayerScenarios}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"highlightWeekends\": string, \"highlightWeekendsClassName\": string, \"nowMarker\": string, \"nowMarkerClassName\": string, \"verticalGrid\": string, \"verticalGridClassName\": string, \"markers\": string, \"highlightedIntervals\": string, \"highlightedIntervalClassName\": string, \"classNameForMarker\": string}"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "src/timeline.test.js",
    "content": "'use strict';\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {expect} from 'chai';\n\nimport setup from 'setupTests';\n\nimport Timeline from 'timeline';\n\n// describe('<Timeline/>', function() {\n//   it('should have text', function() {\n//     const wrapper = shallow(<Timeline />);\n//     expect(wrapper.text()).to.equal('Hello');\n//   });\n// });\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/timeline.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/types.js",
    "content": "/**\n * This file is empty, but is needed, because we have types.d.ts. And we do import it from other files\n * (needed by tsc when it does its thing to generate the .d.ts files). And if we do this, storybook also\n * wants to see a \"real\" file.\n */\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/utils/commonUtils.js",
    "content": "/**\n * Add int pixels to a css style (left or top generally)\n * @param  {string} style Style string in css format\n * @param  {number} diff The pixels to add/subtract\n * @returns {string} Style as string for css use\n */\nexport function sumStyle(style, diff) {\n  return intToPix(pixToInt(style) + diff);\n}\n\n/**\n * Converts a pixel string to an int\n * @param  {string} pix Pixel string\n * @return {number} Integer value of the pixel string\n */\nexport function pixToInt(pix) {\n  return parseInt(pix.replace('px', ''));\n}\n\n/**\n * Convert integer to pixel string.\n * If not an integer the input is returned as is\n * @param  {number} int Integer value\n * @returns {string} Pixel string\n */\nexport function intToPix(int) {\n  if (int === Number(int)) return int + 'px';\n  return int;\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/utils/commonUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "sumStyle",
    "memberof": "src/utils/commonUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/commonUtils.js~sumStyle",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/commonUtils.js",
    "importStyle": "{sumStyle}",
    "description": "Add int pixels to a css style (left or top generally)",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Style as string for css use"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "Style string in css format"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "diff",
        "description": "The pixels to add/subtract"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Style as string for css use"
    }
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "pixToInt",
    "memberof": "src/utils/commonUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/commonUtils.js~pixToInt",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/commonUtils.js",
    "importStyle": "{pixToInt}",
    "description": "Converts a pixel string to an int",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pix",
        "description": "Pixel string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Integer value of the pixel string"
    }
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "intToPix",
    "memberof": "src/utils/commonUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/commonUtils.js~intToPix",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/commonUtils.js",
    "importStyle": "{intToPix}",
    "description": "Convert integer to pixel string.\nIf not an integer the input is returned as is",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Pixel string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "int",
        "description": "Integer value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Pixel string"
    }
  },
  {
    "__docId__": 171,
    "kind": "file",
    "name": "src/utils/commonUtils.test.js",
    "content": "import {expect} from 'chai';\n\nimport {intToPix, pixToInt} from './commonUtils';\n\ndescribe('Common Utils', function() {\n  describe('intToPix', function() {\n    it('should convert an int to a pixel string', function() {\n      expect(intToPix(1)).to.equal('1px');\n    });\n    it('should leave already converted strings as is', function() {\n      expect(intToPix('1px')).to.equal('1px');\n    });\n  });\n  describe('pixToInt', function() {\n    it('should convert a string to an int', function() {\n      expect(pixToInt('1px')).to.equal(1);\n    });\n    it('should convert a string to an int (2)', function() {\n      expect(pixToInt('1 px')).to.equal(1);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/utils/commonUtils.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "src/utils/itemUtils.js",
    "content": "'use strict';\n\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport {Item, RowLayer} from '../index';\n\n/**\n * Render all items in a row\n * @external {moment} http://momentjs.com/\n * @param  {Item[]} items List of items to render for this row\n * @param  {moment} vis_start The visible start of the timeline\n * @param  {moment} vis_end The visible end of the timeline\n * @param  {number} total_width pixel width of the timeline\n * @param  {number} itemHeight The height of the item in px\n * @param  {function} itemRenderer The renderer of the item\n * @param  {Object[]} selectedItems\n * @param  {Object} itemRendererDefaultProps\n * @param  {function} getStartFromItem Function that returns the start of an item\n * @param  {function} getEndFromItem Function that returns the end of an item\n */\nexport function rowItemsRenderer(\n  items,\n  vis_start,\n  vis_end,\n  total_width,\n  itemHeight,\n  itemRenderer,\n  selectedItems = [],\n  itemRendererDefaultProps,\n  getStartFromItem,\n  getEndFromItem\n) {\n  const start_end_ms = vis_end.diff(vis_start, 'milliseconds');\n  const pixels_per_ms = total_width / start_end_ms;\n  let filtered_items = _.sortBy(\n    _.filter(items, i => {\n      // if end not before window && start not after window\n      return !getEndFromItem(i).isBefore(vis_start) && !getStartFromItem(i).isAfter(vis_end);\n    }),\n    i => -getStartFromItem(i).unix()\n  ); // sorted in reverse order as we iterate over the array backwards\n  let displayItems = [];\n  let rowOffset = 0;\n  while (filtered_items.length > 0) {\n    let lastEnd = null;\n    for (let i = filtered_items.length - 1; i >= 0; i--) {\n      if (lastEnd === null || getStartFromItem(filtered_items[i]) >= lastEnd) {\n        let item = _.clone(filtered_items[i]);\n        item.rowOffset = rowOffset;\n        displayItems.push(item);\n        filtered_items.splice(i, 1);\n        lastEnd = getEndFromItem(item);\n      }\n    }\n    rowOffset++;\n  }\n  return _.map(displayItems, i => {\n    const Comp = itemRenderer;\n    let top = itemHeight * i['rowOffset'];\n    // itemHeight is also used to calculate the row height; the row height is the maximum number of overlapping items\n    // in a row multiplied with itemHeight.\n    // If the max overlapping items is 1, then itemHeight = row height,\n    // but we need to subtract 10 because of the margin (see rct9k-items-inner class in style.css)\n    const adjustedItemHeight = itemHeight - 10;\n    let item_offset_mins = getStartFromItem(i).diff(vis_start, 'milliseconds');\n    let item_duration_mins = getEndFromItem(i).diff(getStartFromItem(i), 'milliseconds');\n    let left = Math.round(item_offset_mins * pixels_per_ms);\n    let width = Math.round(item_duration_mins * pixels_per_ms);\n    let compClassnames = (i.className || itemRendererDefaultProps.className) + ' rct9k-items-inner';\n    let outerClassnames = 'rct9k-items-outer item_draggable';\n    let style = {};\n    let isSelected = selectedItems.indexOf(Number(i.key)) > -1;\n\n    if (isSelected) {\n      compClassnames += ' rct9k-items-selected';\n      outerClassnames += ' rct9k-items-outer-selected';\n      style = {};\n    }\n\n    return (\n      <span\n        key={i.key}\n        data-item-index={i.key}\n        className={outerClassnames}\n        style={{left, width, top, backgroundColor: 'transparent'}}>\n        <Comp {...itemRendererDefaultProps} {...i} item={i} className={compClassnames} height={adjustedItemHeight} />\n      </span>\n    );\n  });\n}\n\n/**\n * Render row layers\n * @param  {RowLayer[]} layers List of layers to render for this row\n * @param  {moment} vis_start The visible start of the timeline\n * @param  {moment} vis_end The visible end of the timeline\n * @param  {number} total_width pixel width of the timeline\n * @param  {number} itemHeight The layer height in px\n * @param  {function} getStartFromRowLayer Function that returns the start of a row layer\n * @param  {function} getEndFromRowLayer Function that returns the end of a row layer\n */\nexport function rowLayerRenderer(\n  layers,\n  vis_start,\n  vis_end,\n  total_width,\n  itemHeight,\n  getStartFromRowLayer,\n  getEndFromRowLayer\n) {\n  const start_end_ms = vis_end.diff(vis_start, 'milliseconds');\n  const pixels_per_ms = total_width / start_end_ms;\n  let filtered_items = _.sortBy(\n    _.filter(layers, i => {\n      return !getEndFromRowLayer(i).isBefore(vis_start) && !getStartFromRowLayer(i).isAfter(vis_end);\n    }),\n    i => -getStartFromRowLayer(i).unix()\n  ); // sorted in reverse order as we iterate over the array backwards\n  let displayItems = [];\n  let rowOffset = 0;\n  while (filtered_items.length > 0) {\n    let lastEnd = null;\n    for (let i = filtered_items.length - 1; i >= 0; i--) {\n      if (lastEnd === null || getStartFromRowLayer(filtered_items[i]) >= lastEnd) {\n        let item = _.clone(filtered_items[i]);\n        item.rowOffset = rowOffset;\n        displayItems.push(item);\n        filtered_items.splice(i, 1);\n        lastEnd = getEndFromRowLayer(item);\n      }\n    }\n    rowOffset++;\n  }\n  return _.map(displayItems, i => {\n    const {style, rowNumber} = i;\n    let top = itemHeight * i['rowOffset'];\n    let item_offset_mins = getStartFromRowLayer(i).diff(vis_start, 'milliseconds');\n    let item_duration_mins = getEndFromRowLayer(i).diff(getStartFromRowLayer(i), 'milliseconds');\n    let left = Math.round(item_offset_mins * pixels_per_ms);\n    let width = Math.round(item_duration_mins * pixels_per_ms);\n    let height = itemHeight - (rowNumber === 0 ? 2 : 1); // for border\n    let outerClassnames = 'rct9k-row-layer';\n\n    return (\n      <div\n        key={`r-${rowNumber}-${getStartFromRowLayer(i).unix()}`}\n        data-item-index={i.key}\n        className={outerClassnames}\n        style={{...style, left, width, top, height}}\n      />\n    );\n  });\n}\n\n/**\n * Gets the row object for a given x and y pixel location\n * @param  {number} x The x coordinate of the pixel location\n * @param  {number} y The y coordinate of the pixel location\n * @param  {Object} topDiv Div to search under\n * @returns {Object} The row object at that coordinate\n */\nexport function getNearestRowObject(x, y, topDiv = document) {\n  let elementsAtPixel = document.elementsFromPoint(x, y);\n  return _.find(elementsAtPixel, e => {\n    const inDiv = topDiv.contains(e);\n    return inDiv && e.hasAttribute('data-row-index');\n  });\n}\n\n/**\n * Gets the row number for a given row object\n * @param  {Object} elem The row object\n * @returns {number} The row number\n */\nexport function getRowObjectRowNumber(elem) {\n  return Number(elem ? elem.getAttribute('data-row-index') : 0);\n}\n\n/**\n * Gets the vertical margins and borders given an object\n * @param  {Object} elem The row object\n * @returns {number} the pixel position of the bottom of the element\n */\nexport function getVerticalMarginBorder(elem) {\n  const computedStyles = window.getComputedStyle(elem);\n  // top margin plus bottom margin halved\n  const rowMargins =\n    (Math.ceil(parseFloat(computedStyles['marginTop']) + parseFloat(computedStyles['marginBottom'])) || 1) / 2;\n  // half the size of the border seems important\n  const rowBorders =\n    (Math.ceil(parseFloat(computedStyles['borderTopWidth']) + parseFloat(computedStyles['borderBottomWidth'])) || 1) /\n    2;\n  return Number(rowMargins + rowBorders);\n}\n\n/**\n * Gets the true bottom location given an object\n * @param  {Object} elem an element\n * @returns {number} the pixel position of the bottom of the element\n */\nexport function getTrueBottom(elem) {\n  /*\n  @bendog: leaving this here as a helper, if there's ever a bug around inner items size\n  // get object shape\n  const rects = elem.getClientRects();\n  const bottom = Math.max(Object.values(rects).map(o => o.bottom), 0);\n   */\n  // calculate the true bottom\n  const bound = elem.getBoundingClientRect();\n  const bottom = Math.floor(bound.top + bound.height);\n  return Number(bottom);\n}\n\n/**\n * Gets the row number for a given x and y pixel location\n * @param  {number} x The x coordinate of the pixel location\n * @param  {number} y The y coordinate of the pixel location\n * @param  {Object} topDiv Div to search under\n * @returns {number} The row number\n */\nexport function getNearestRowNumber(x, y, topDiv = document) {\n  let elementsAtPixel = document.elementsFromPoint(x, y);\n  let targetRow = _.find(elementsAtPixel, e => {\n    const inDiv = topDiv.contains(e);\n    return inDiv && e.hasAttribute('data-row-index');\n  });\n  return targetRow ? targetRow.getAttribute('data-row-index') : 0;\n}\n\n/**\n * Use to find the height of a row, given a set of items\n * @param  {Item[]} items List of items\n * @param  {function} getStartFromItem Function that returns the start of an item.\n * @param  {function} getEndFromItem Function that returns the end of an item.\n * @param  {boolean} useMoment This parameter is necessary because this method is also called when\n * the component receives new props.\n * @returns {number} Max row height\n */\nexport function getMaxOverlappingItems(items, getStartFromItem, getEndFromItem, useMoment) {\n  let max = 0;\n  let sorted_items = _.sortBy(items, i => -getStartFromItem(i, useMoment).unix());\n  while (sorted_items.length > 0) {\n    let lastEnd = null;\n    for (let i = sorted_items.length - 1; i >= 0; i--) {\n      if (lastEnd === null || getStartFromItem(sorted_items[i], useMoment) >= lastEnd) {\n        lastEnd = getEndFromItem(sorted_items[i], useMoment);\n        sorted_items.splice(i, 1);\n      }\n    }\n    max++;\n  }\n  return Math.max(max, 1);\n}\n\n/**\n * It finds the ancestor with the provided className of the element.\n * @param {Object} the DOM element\n * @param {string} className\n * @returns {Object} ancestor with className\n */\nexport function findAncestorWithClassName(element, className) {\n  while ((element = element.parentNode) && !element.classList.contains(className));\n  return element;\n}\n\n/**\n * A special case is when we try to select items from a row that is scrolled (not fully visible).\n * The `top` position of that row is not visible, so when we move the mouse and try to find the nearest row object\n * using the `top` position, it will not find the actual row because at that position the row is not visible.\n * In this case we will use the `top` position of the viewport (the container of the rows).\n * @param {Object} row the DOM element of the row object\n * @param {number} top\n */\nexport function adjustRowTopPositionToViewport(row, top) {\n  let viewport = findAncestorWithClassName(row, 'ReactVirtualized__Grid').getBoundingClientRect();\n  if (viewport.top > top) {\n    return viewport.top;\n  }\n  return top;\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/utils/itemUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "moment",
    "externalLink": "http://momentjs.com/",
    "memberof": "src/utils/itemUtils.js",
    "static": true,
    "longname": "src/utils/itemUtils.js~moment",
    "access": "public",
    "description": "Render all items in a row",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Item[]"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "List of items to render for this row"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_start",
        "description": "The visible start of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_end",
        "description": "The visible end of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total_width",
        "description": "pixel width of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "itemHeight",
        "description": "The height of the item in px"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "itemRenderer",
        "description": "The renderer of the item"
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "selectedItems",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "itemRendererDefaultProps",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "getStartFromItem",
        "description": "Function that returns the start of an item"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "getEndFromItem",
        "description": "Function that returns the end of an item"
      }
    ]
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "rowLayerRenderer",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~rowLayerRenderer",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{rowLayerRenderer}",
    "description": "Render row layers",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "RowLayer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "layers",
        "description": "List of layers to render for this row"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_start",
        "description": "The visible start of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_end",
        "description": "The visible end of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total_width",
        "description": "pixel width of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "itemHeight",
        "description": "The layer height in px"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "getStartFromRowLayer",
        "description": "Function that returns the start of a row layer"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "getEndFromRowLayer",
        "description": "Function that returns the end of a row layer"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "getNearestRowObject",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~getNearestRowObject",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{getNearestRowObject}",
    "description": "Gets the row object for a given x and y pixel location",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} The row object at that coordinate"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The x coordinate of the pixel location"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The y coordinate of the pixel location"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "topDiv",
        "description": "Div to search under"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The row object at that coordinate"
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "getRowObjectRowNumber",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~getRowObjectRowNumber",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{getRowObjectRowNumber}",
    "description": "Gets the row number for a given row object",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The row number"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The row object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The row number"
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "getVerticalMarginBorder",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~getVerticalMarginBorder",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{getVerticalMarginBorder}",
    "description": "Gets the vertical margins and borders given an object",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} the pixel position of the bottom of the element"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The row object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the pixel position of the bottom of the element"
    }
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "getTrueBottom",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~getTrueBottom",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{getTrueBottom}",
    "description": "Gets the true bottom location given an object",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} the pixel position of the bottom of the element"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "an element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the pixel position of the bottom of the element"
    }
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "getNearestRowNumber",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~getNearestRowNumber",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{getNearestRowNumber}",
    "description": "Gets the row number for a given x and y pixel location",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The row number"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The x coordinate of the pixel location"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The y coordinate of the pixel location"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "topDiv",
        "description": "Div to search under"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The row number"
    }
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "getMaxOverlappingItems",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~getMaxOverlappingItems",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{getMaxOverlappingItems}",
    "description": "Use to find the height of a row, given a set of items",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Max row height"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Item[]"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "List of items"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "getStartFromItem",
        "description": "Function that returns the start of an item."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "getEndFromItem",
        "description": "Function that returns the end of an item."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useMoment",
        "description": "This parameter is necessary because this method is also called when\nthe component receives new props."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Max row height"
    }
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "findAncestorWithClassName",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~findAncestorWithClassName",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{findAncestorWithClassName}",
    "description": "It finds the ancestor with the provided className of the element.",
    "lineNumber": 262,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} ancestor with className"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "the",
        "description": "DOM element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ancestor with className"
    }
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "adjustRowTopPositionToViewport",
    "memberof": "src/utils/itemUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.js~adjustRowTopPositionToViewport",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.js",
    "importStyle": "{adjustRowTopPositionToViewport}",
    "description": "A special case is when we try to select items from a row that is scrolled (not fully visible).\nThe `top` position of that row is not visible, so when we move the mouse and try to find the nearest row object\nusing the `top` position, it will not find the actual row because at that position the row is not visible.\nIn this case we will use the `top` position of the viewport (the container of the rows).",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "row",
        "description": "the DOM element of the row object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "top",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "src/utils/itemUtils.test.js",
    "content": "import {expect} from 'chai';\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport {getMaxOverlappingItems} from './itemUtils';\nimport {convertDateToMoment} from './timeUtils';\n\nfunction getStartFromItem(item) {\n  return convertDateToMoment(item.start, true);\n}\n\nfunction getEndFromItem(item) {\n  return convertDateToMoment(item.end, true);\n}\n\n//\n// |--1--|\n//          |--2--|\n//   |--3--|\n//       |--4--|\n//     |--5--|\nconst allTestItems = [\n  {\n    key: '1',\n    title: '1',\n    color: 'blue',\n    row: 1,\n    start: moment('2000-01-01'),\n    end: moment('2000-01-01').add(1, 'days')\n  },\n  {\n    key: '2',\n    title: '2',\n    color: 'blue',\n    row: 1,\n    start: moment('2000-01-03'),\n    end: moment('2000-01-03')\n      .startOf('day')\n      .add(1, 'days')\n  },\n  {\n    key: '3',\n    title: '3',\n    color: 'blue',\n    row: 1,\n    start: moment('2000-01-01').add(1, 'hours'),\n    end: moment('2000-01-01')\n      .add(1, 'hours')\n      .add(1, 'days')\n  },\n  {\n    key: '4',\n    title: '4',\n    color: 'blue',\n    row: 1,\n    start: moment('2000-01-01').add(1, 'days'),\n    end: moment('2000-01-01')\n      .add(1, 'hours')\n      .add(1, 'days')\n  },\n  {\n    key: '5',\n    title: '5',\n    color: 'blue',\n    row: 1,\n    start: moment('2000-01-01').add(2, 'hours'),\n    end: moment('2000-01-01')\n      .add(2, 'hours')\n      .add(1, 'days')\n  }\n];\n\ndescribe('Item Utils', function() {\n  describe('getMaxOverlappingItems', function() {\n    it('should return a default of 1', function() {\n      const result = getMaxOverlappingItems([], getStartFromItem, getEndFromItem);\n      expect(result).to.equal(1);\n    });\n    // Diagram\n    //  |-----|  |----|\n    it('should return 1 when no overlapping items', function() {\n      let testInstanceIDs = ['1', '2'];\n      let items = _.filter(allTestItems, i => {\n        return _.includes(testInstanceIDs, i.key);\n      });\n      const result = getMaxOverlappingItems(items, getStartFromItem, getEndFromItem);\n      expect(result).to.equal(1);\n    });\n    // Diagram\n    //  |-----|\n    //    |------|\n    it('should return 2 when 2 items overlap', () => {\n      let testInstanceIDs = ['1', '3'];\n      let items = _.filter(allTestItems, i => {\n        return _.includes(testInstanceIDs, i.key);\n      });\n      const result = getMaxOverlappingItems(items, getStartFromItem, getEndFromItem);\n      expect(result).to.equal(2);\n    });\n    // Diagram\n    //  |-----|-----|\n    it('should return 1 when 2 items touch', () => {\n      let testInstanceIDs = ['1', '4'];\n      let items = _.filter(allTestItems, i => {\n        return _.includes(testInstanceIDs, i.key);\n      });\n      const result = getMaxOverlappingItems(items, getStartFromItem, getEndFromItem);\n      expect(result).to.equal(1);\n    });\n    // Diagram\n    //  |-----|\n    //    |------|\n    //       |------|\n    it('should return 3 when 3 items overlap', () => {\n      let testInstanceIDs = ['1', '3', '5'];\n      let items = _.filter(allTestItems, i => {\n        return _.includes(testInstanceIDs, i.key);\n      });\n      const result = getMaxOverlappingItems(items, getStartFromItem, getEndFromItem);\n      expect(result).to.equal(3);\n    });\n    // Diagram\n    //  |-----|  |------|\n    //      |------|\n    it('should return 2 when 2 of 3 items overlap', () => {\n      let testInstanceIDs = ['2', '3', '4'];\n      let items = _.filter(allTestItems, i => {\n        return _.includes(testInstanceIDs, i.key);\n      });\n      const result = getMaxOverlappingItems(items, getStartFromItem, getEndFromItem);\n      expect(result).to.equal(2);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/utils/itemUtils.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "getStartFromItem",
    "memberof": "src/utils/itemUtils.test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.test.js~getStartFromItem",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "getEndFromItem",
    "memberof": "src/utils/itemUtils.test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/itemUtils.test.js~getEndFromItem",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "allTestItems",
    "memberof": "src/utils/itemUtils.test.js",
    "static": true,
    "longname": "src/utils/itemUtils.test.js~allTestItems",
    "access": "public",
    "export": false,
    "importPath": "@crispico/react-timeline-10000/src/utils/itemUtils.test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "src/utils/timeUtils.js",
    "content": "// Time utilities\n\nimport moment from 'moment';\n\n/**\n * Snaps a moment object to the given resolution\n * @param {moment} time The moment to snap\n * @param {number} snapMilliseconds The snap time in milliseconds\n * @returns {moment} Snapped moment\n */\nexport function timeSnap(time, snapMilliseconds) {\n  if (snapMilliseconds === 0) {\n    const newTime = time.clone();\n    newTime.set('millisecond', 0);\n    return newTime;\n  }\n  const newUnix = Math.round((time.unix() * 1000) / snapMilliseconds) * snapMilliseconds;\n  return moment(newUnix);\n}\n\n/**\n * Get the pixels per millisecond\n * @param {moment} vis_start The moment specifying the start of the visible timeline range\n * @param {moment} vis_end The moment specifying the end of the visible timeline range\n * @param {number} total_width The width of the timeline in pixels\n * @returns {float} The pixels per millisecond\n */\nexport function pixelsPerMillisecond(vis_start, vis_end, total_width) {\n  const start_end_ms = vis_end.diff(vis_start, 'milliseconds');\n  return total_width / start_end_ms;\n}\n\n/**\n *\n * @param {number} delta the delta distance in pixels\n * @param {moment} vis_start the visible start of the timeline\n * @param {moment} vis_end  the visible end of the timeline\n * @param {number} total_width  the pixel width of the timeline\n * @param {number} snapMilliseconds the number of milliseconds to snap to\n */\nexport function getSnapPixelFromDelta(delta, vis_start, vis_end, total_width, snapMilliseconds = 0) {\n  const pixelsPerSnapSegment = pixelsPerMillisecond(vis_start, vis_end, total_width) * snapMilliseconds;\n  return Math.round(delta / pixelsPerSnapSegment) * pixelsPerSnapSegment;\n}\n\n/**\n * Get the time at a pixel location\n * @param {number} pixel_location the pixel location (generally from left css style)\n * @param {moment} vis_start The visible start of the timeline\n * @param {moment} vis_end The visible end of the timeline\n * @param {number} total_width The pixel width of the timeline (row portion)\n * @param {number} snapMilliseconds The snap resolution (in ms)\n * @returns {moment} Moment object\n */\nexport function getTimeAtPixel(pixel_location, vis_start, vis_end, total_width, snapMilliseconds = 0) {\n  let min_offset = pixel_location / pixelsPerMillisecond(vis_start, vis_end, total_width);\n  let timeAtPix = vis_start.clone().add(min_offset, 'milliseconds');\n  if (snapMilliseconds !== 0) timeAtPix = timeSnap(timeAtPix, snapMilliseconds);\n  return timeAtPix;\n}\n\n/**\n * Get the pixel location at a specific time\n * @param  {objects} time The time (moment) object\n * @param  {moment} vis_start The visible start of the timeline\n * @param  {moment} vis_end The visible end of the timeline\n * @param  {number} total_width The width in pixels of the grid\n * @returns {number} The pixel offset\n */\nexport function getPixelAtTime(time, vis_start, vis_end, total_width) {\n  const min_from_start = time.diff(vis_start, 'milliseconds');\n  return min_from_start * pixelsPerMillisecond(vis_start, vis_end, total_width);\n}\n\n/**\n * Returns the duration from the {@link vis_start}\n * @param  {number} pixels\n * @param  {moment} vis_start The visible start of the timeline\n * @param  {moment} vis_end The visible end of the timeline\n * @param  {number} total_width The width in pixels of the grid\n * @returns {moment} Moment duration\n */\nexport function getDurationFromPixels(pixels, vis_start, vis_end, total_width) {\n  const start_end_ms = vis_end.diff(vis_start, 'milliseconds');\n  if (start_end_ms === 0) return moment.duration(0, 'milliseconds');\n  const pixels_per_ms = total_width / start_end_ms;\n  let millis = pixels / pixels_per_ms;\n  return moment.duration(millis, 'milliseconds');\n}\n\n/**\n * If `useMoment` is `true` then returns `date` as is. Otherwise converts `date` to\n * a moment object.\n *\n * @param {moment|number} date\n * @param {boolean} useMoment\n * @returns moment\n */\nexport function convertDateToMoment(date, useMoment) {\n  if (useMoment) {\n    return date;\n  }\n  return moment(date);\n}\n\n/**\n * If `useMoment` is `true` returns `dateAsMoment` as is. Otherwise it converts `dateAsMoment` to\n * number/milliseconds.\n *\n * @param {moment} dateAsMoment\n * @param {boolean} useMoment\n * @returns a moment object or a number/milliseconds\n */\nexport function convertMomentToDateType(dateAsMoment, useMoment) {\n  if (useMoment) {\n    return dateAsMoment;\n  }\n  return dateAsMoment.valueOf();\n}\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/utils/timeUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "timeSnap",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~timeSnap",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{timeSnap}",
    "description": "Snaps a moment object to the given resolution",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{moment} Snapped moment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "The moment to snap"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "snapMilliseconds",
        "description": "The snap time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "moment"
      ],
      "spread": false,
      "description": "Snapped moment"
    }
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "pixelsPerMillisecond",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~pixelsPerMillisecond",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{pixelsPerMillisecond}",
    "description": "Get the pixels per millisecond",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{float} The pixels per millisecond"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_start",
        "description": "The moment specifying the start of the visible timeline range"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_end",
        "description": "The moment specifying the end of the visible timeline range"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total_width",
        "description": "The width of the timeline in pixels"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "float"
      ],
      "spread": false,
      "description": "The pixels per millisecond"
    }
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "getSnapPixelFromDelta",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~getSnapPixelFromDelta",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{getSnapPixelFromDelta}",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "the delta distance in pixels"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_start",
        "description": "the visible start of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_end",
        "description": "the visible end of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total_width",
        "description": "the pixel width of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "snapMilliseconds",
        "description": "the number of milliseconds to snap to"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "getTimeAtPixel",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~getTimeAtPixel",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{getTimeAtPixel}",
    "description": "Get the time at a pixel location",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{moment} Moment object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pixel_location",
        "description": "the pixel location (generally from left css style)"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_start",
        "description": "The visible start of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_end",
        "description": "The visible end of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total_width",
        "description": "The pixel width of the timeline (row portion)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "snapMilliseconds",
        "description": "The snap resolution (in ms)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "moment"
      ],
      "spread": false,
      "description": "Moment object"
    }
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "getPixelAtTime",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~getPixelAtTime",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{getPixelAtTime}",
    "description": "Get the pixel location at a specific time",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The pixel offset"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "objects"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "The time (moment) object"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_start",
        "description": "The visible start of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_end",
        "description": "The visible end of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total_width",
        "description": "The width in pixels of the grid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The pixel offset"
    }
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "getDurationFromPixels",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~getDurationFromPixels",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{getDurationFromPixels}",
    "description": "Returns the duration from the {@link vis_start}",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{moment} Moment duration"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pixels",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_start",
        "description": "The visible start of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "vis_end",
        "description": "The visible end of the timeline"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total_width",
        "description": "The width in pixels of the grid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "moment"
      ],
      "spread": false,
      "description": "Moment duration"
    }
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "convertDateToMoment",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~convertDateToMoment",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{convertDateToMoment}",
    "description": "If `useMoment` is `true` then returns `date` as is. Otherwise converts `date` to\na moment object.",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "moment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "moment",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "date",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useMoment",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "moment"
    }
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "convertMomentToDateType",
    "memberof": "src/utils/timeUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/timeUtils.js~convertMomentToDateType",
    "access": "public",
    "export": true,
    "importPath": "@crispico/react-timeline-10000/src/utils/timeUtils.js",
    "importStyle": "{convertMomentToDateType}",
    "description": "If `useMoment` is `true` returns `dateAsMoment` as is. Otherwise it converts `dateAsMoment` to\nnumber/milliseconds.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "a moment object or a number/milliseconds"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "dateAsMoment",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useMoment",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "a moment object or a number/milliseconds"
    }
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "src/utils/timeUtils.test.js",
    "content": "import {expect} from 'chai';\n\nimport moment from 'moment';\nimport {\n  timeSnap,\n  getTimeAtPixel,\n  getPixelAtTime,\n  getDurationFromPixels,\n  getSnapPixelFromDelta,\n  convertDateToMoment,\n  convertMomentToDateType\n} from './timeUtils';\n\ndescribe('Time Utils', function() {\n  describe('timeSnap', function() {\n    it('should round up to the last sec', function() {\n      const testTime = moment('2000-01-01 10:00:00.872 Z', 'YYYY-MM-DD H:m:s.SSS Z');\n      const expectedTime = moment('2000-01-01 10:00:00.000 Z', 'YYYY-MM-DD H:m:s.SSS Z');\n      const snap = 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round down to the last sec', function() {\n      const testTime = moment('2000-01-01 10:00:00.272 Z', 'YYYY-MM-DD H:m:s.SSS Z');\n      const expectedTime = moment('2000-01-01 10:00:00.000 Z', 'YYYY-MM-DD H:m:s.SSS Z');\n      const snap = 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round up to the nearest min', function() {\n      const testTime = moment('2000-01-01 9:59:50 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedTime = moment('2000-01-01 10:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const snap = 60 * 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round down to the nearest min', function() {\n      const testTime = moment('2000-01-01 10:00:20 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedTime = moment('2000-01-01 10:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const snap = 60 * 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round up when at 30s (nearest min)', function() {\n      const testTime = moment('2000-01-01 10:00:30 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedTime = moment('2000-01-01 10:01:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const snap = 60 * 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round to nearest hour', function() {\n      const testTime = moment('2000-01-01 10:12:30 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedTime = moment('2000-01-01 10:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const snap = 60 * 60 * 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round to nearest hour over mid-night', function() {\n      const testTime = moment('2000-01-01 23:44:40 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedTime = moment('2000-01-02 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const snap = 60 * 60 * 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round up to nearest day', function() {\n      const testTime = moment('2000-01-01 12:44:40 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedTime = moment('2000-01-02 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const snap = 60 * 60 * 24 * 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n    it('should round down to nearest day', function() {\n      const testTime = moment('2000-01-01 11:44:40 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedTime = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const snap = 60 * 60 * 24 * 1000;\n      const actualTime = timeSnap(testTime, snap);\n      expect(actualTime.unix()).to.equal(expectedTime.unix());\n    });\n  });\n  describe('getTimeAtPixel', function() {\n    it('should return start time for 0', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = 0;\n      let time = getTimeAtPixel(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(time.unix()).to.equal(visStart.unix());\n    });\n    it('should return before start for -ve pixels', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = -40;\n      let time = getTimeAtPixel(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(time.unix()).to.lt(visStart.unix());\n    });\n    it('should return end time for width pixels', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = 2000;\n      let time = getTimeAtPixel(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(time.unix()).to.equal(visEnd.unix());\n    });\n    it('should return higher than width for over width pixels', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = 2400;\n      let time = getTimeAtPixel(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(time.unix()).to.gt(visEnd.unix());\n    });\n    it('should return correct fraction of time for given pixel location', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2100; //2000 px\n      const pixelOffset = 300;\n      const expectedTime = visStart.clone().add((pixelOffset / timelineWidth) * 7, 'days');\n      let time = getTimeAtPixel(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(time.unix()).to.equal(expectedTime.unix());\n    });\n  });\n  describe('getPixelAtTime', function() {\n    it('should return 0 for start time', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const testTime = visStart.clone();\n      let pixels = getPixelAtTime(testTime, visStart, visEnd, timelineWidth);\n      expect(pixels).to.equal(0);\n    });\n    it('should return -ve for before start time', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const testTime = moment('1999-12-30 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      let pixels = getPixelAtTime(testTime, visStart, visEnd, timelineWidth);\n      expect(pixels).to.lt(0);\n    });\n    it('should return width for end time', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const testTime = visEnd.clone();\n      let pixels = getPixelAtTime(testTime, visStart, visEnd, timelineWidth);\n      expect(pixels).to.equal(timelineWidth);\n    });\n    it('should return greater than width for after end time', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const testTime = moment('2000-01-09 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      let pixels = getPixelAtTime(testTime, visStart, visEnd, timelineWidth);\n      expect(pixels).to.gt(timelineWidth);\n    });\n    it('should return correct pixels for given fraction of time', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const testTime = moment('2000-01-04 12:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const expectedPixels = timelineWidth * (3.5 / 7);\n      let pixels = getPixelAtTime(testTime, visStart, visEnd, timelineWidth);\n      expect(pixels).to.equal(expectedPixels);\n    });\n  });\n  describe('getDurationFromPixels', function() {\n    it('should return 0 for 0 pixels', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = 0;\n      let duration = getDurationFromPixels(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(duration.asSeconds()).to.equal(0);\n    });\n    it('should return negative duration for -ve pixels', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = -40;\n      let duration = getDurationFromPixels(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(duration.asSeconds()).to.lt(0);\n    });\n    it('should return (visible end - visible start) for width pixels', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = 2000;\n      const expectedDuration = visEnd.diff(visStart, 'seconds');\n      let duration = getDurationFromPixels(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(duration.asSeconds()).to.equal(expectedDuration);\n    });\n    it('should return higher than (visible end - visible start) for over width pixels', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2000; //2000 px\n      const pixelOffset = 2400;\n      let duration = getDurationFromPixels(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(duration.asSeconds()).to.gt(moment.duration(7, 'days').asSeconds());\n    });\n    it('should return correct fraction of duration for given pixel location', function() {\n      const visStart = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n      const visEnd = moment('2000-01-08 00:00:00 Z', 'YYYY-MM-DD H:m:s Z'); // 7 days\n      const timelineWidth = 2100; //2000 px\n      const pixelOffset = 300;\n      const expectedDuration = (pixelOffset / timelineWidth) * 7 * 24 * 60 * 60;\n      let duration = getDurationFromPixels(pixelOffset, visStart, visEnd, timelineWidth);\n      expect(duration.asSeconds()).to.equal(expectedDuration);\n    });\n  }),\n    describe('convertDateToMoment', function() {\n      it('should return the received date(moment) when useMoment is true', function() {\n        const date = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n        const useMoment = true;\n        let expectedMoment = date;\n        let actualMoment = convertDateToMoment(date, useMoment);\n        expect(actualMoment).to.deep.equal(expectedMoment);\n      });\n      it('should convert date to moment when useMoment is false', function() {\n        const date = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z').valueOf();\n        const useMoment = false;\n        let expectedMoment = moment(date);\n        let actualMoment = convertDateToMoment(date, useMoment);\n        expect(actualMoment).to.deep.equal(expectedMoment);\n      });\n    }),\n    describe('convertMomentToDateType', function() {\n      it('should return moment when useMoment is true', function() {\n        const date = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n        const useMoment = true;\n        let expectedMoment = date;\n        let actualMoment = convertMomentToDateType(date, useMoment);\n        expect(actualMoment).to.deep.equal(expectedMoment);\n      });\n      it('should return date in millis when useMoment is false', function() {\n        const date = moment('2000-01-01 00:00:00 Z', 'YYYY-MM-DD H:m:s Z');\n        const useMoment = false;\n        let expectedDate = 946684800000;\n        let actualDate = convertMomentToDateType(date, useMoment);\n        expect(actualDate).to.deep.equal(expectedDate);\n      });\n    });\n});\n",
    "static": true,
    "longname": "/home/poweruser/git/react-timeline-10000/src/utils/timeUtils.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# React Timeline 10000 (forked by the Flower Platform team)\n\n## Intro\n\nThis fork is developed and maintained by the \"Flower Platform\" team (which FYI has authored in the past [Gantt4Flex](http://gantt4flex.crispico.com/), a popular (at that time) commercial Gantt diagramming component during the [Adobe Flex](http://flex.apache.org/) era). The motivation of our contributions is driven by the fact that we use \"react-timeline-9000\" in some of our industrial projects. The intention is to develop new features that we can use ASAP in our software. ALL our contributions are meant to be integrated in the upstream repo, so they are developed having this constraint in mind. The upstream repo is the **official** one (for releases, clone, adding issues, etc.). And this is to be considered as an internal repo for us = the Flower Platform team.\n\nAdmin discussions w/ the upstream repo team are held in [this discussion](https://github.com/React9k/react-timeline-9000/discussions/255).\n\n## Process and versioning\n\n`package.json` on the **upstream repo** / `master` branch looks like this:\n\n```\n{\n  \"name\": \"react-timeline-9000\",\n  \"version\": \"1.1.3\",\n  ...\n```\n\nBut in **this repo** / `master-flower-platform` branch (which is considered to be the main branch of this repo) we have:\n\n```\n{\n  \"name\": \"@crispico/react-timeline-10000\",\n  \"version\": \"1.1.3-fp-ver-3\",\n  ...\n```\n\nThe `name` is changed so that we can publish it in our local NPM repo. We append to the original `version` the suffix `-fp-ver-N`. Where N is the version from Flower Platform. E.g. 3 means we added 3 commits compared to the original upstream. When a new contribution is added to our main branch = `master-flower-platform`, we increment this number. So we'll have e.g.: *1.1.3-fp-ver-**4***, *1.1.3-fp-ver-**5***, *1.1.**4**-fp-ver-**5***, *1.1.**4**-fp-ver-**6***, etc.\n\nBefore we begin new work, we should first create an issue in the upstream repo:\n* we prefix it w/ *[rt10000]*, like in this [example](https://github.com/React9k/react-timeline-9000/issues/190);\n* we explain what we want to do and ask for advice if needed.\n\nNew work is always done on new branches. E.g. `my-new-branch`. At the end of the work we **squash everything into a single commit** and perform a pull request towards upstream (mentioning the original issue cf. above). If we need the commit ASAP into our main branch:\n* we don't need to wait for their approval of the PR;\n* we make a PR and/or merge it into `master-flower-platform`;\n* then, we increment *fp-ver-N* to *fp-ver-N+1* cf. above.\n\n## Tracking of the pull requests submitted to the upstream repo\n\nWe prefix our issues in the upstream repo w/ `[rt10000]`.\n\n| Issue (mouse hover for title) | Pull request | Merged |\n| - | - | - |\n| React9k/react-timeline-9000#190 | React9k/react-timeline-9000#243 | yes |\n| React9k/react-timeline-9000#196 | React9k/react-timeline-9000#239 | yes |\n| React9k/react-timeline-9000#221 | React9k/react-timeline-9000#241 | yes |\n| React9k/react-timeline-9000#234 | React9k/react-timeline-9000#237 | yes |\n| minor | React9k/react-timeline-9000#257 | yes |\n| minor | React9k/react-timeline-9000#260 | yes |\n| React9k/react-timeline-9000#271 | React9k/react-timeline-9000#272 |  |\n\n## Original `README.md` of the upstream repo is below\n\n---\n\nA performance focused timeline component in react\n## Build Status\n[![Build Status](https://travis-ci.org/BHP-DevHub/react-timeline-9000.svg?branch=master)](https://travis-ci.org/BHP-DevHub/react-timeline-9000)\n[![CodeFactor](https://www.codefactor.io/repository/github/bhp-devhub/react-timeline-9000/badge)](https://www.codefactor.io/repository/github/bhp-devhub/react-timeline-9000)\n[![npm (scoped)](https://img.shields.io/npm/v/react-timeline-9000.svg)](https://www.npmjs.com/package/react-timeline-9000)\n\n## Demo\n* http://react-timeline-9000.s3-website-ap-southeast-2.amazonaws.com/\n\n## Documentation\n* http://react-timeline-9000.s3-website-ap-southeast-2.amazonaws.com/docs/\n\n\n## Getting Started\n\n| Action         | Command                               |\n| -------------- | ------------------------------------- |\n| Build          | `$ make`                              |\n| Test           | `$ make test` or  `$ make test-watch` |\n| Run dev server | `$ make run`                          |\n\n* Add `import react-timeline-9000/lib/style.css` (or use your own styles based on this file)\n\n## Contributing\nFeel free to make a PR :)\n\n# Interaction\n\nDefault interaction for multiple selection is largely governed by the leading item, which is defined as the item that is directly interacted with when multiple items are selected.\n\n## Dragging\n\nAll items will move by the same horizontal delta and row changes will be calculated by the row delta of the leading item\n\n## Resizing\n\nAll items will gain the resize delta from the leading item.\n\n### Overriding the default behaviour\n\nTBA\n\n`onInteraction(type, changes, leadTimeDelta, leaderGroupDelta,selectedItems)` \n\n# Props Summary\n\nSee http://react-timeline-9000.s3-website-ap-southeast-2.amazonaws.com/docs/ for detailed docs\n\n## Props\n| Name               | Default     | Description                                                                                                                                              |\n| ----------------   | -------     | ------------------------------------------------------------------------------------------------------------                                             |\n| groupOffset        |             |                                                                                                                                                          |\n| startDate          |             |                                                                                                                                                          |\n| endDate            |             |                                                                                                                                                          |\n| snapMinutes        |             |                                                                                                                                                          |\n| showCursorTime     |             |                                                                                                                                                          |\n| cursorTimeFormat   |             |                                                                                                                                                          |\n| itemHeight         |             |                                                                                                                                                          |\n| timelineMode       |             |                                                                                                                                                          |\n| timebarFormat      |             |                                                                                                                                                          |\n| itemRenderer       |             |                                                                                                                                                          |\n| itemStyle          | | Style applied to all items      |\n| itemClassName      | | Class name applied to all items |\n| groupRenderer      |             |                                                                                                                                                          |\n| shallowUpdateCheck | False       | If true timeline will try to minimize re-renders . Set to false if items don't show up/update on prop change                                             |\n| forceRedrawFunc  | () => False | Function called when `shallowUpdateCheck`==true. If returns true the timeline will be redrawn. If false the library will decide if redrawing is required |\n| useMoment        | True        | If true timeline will use moment for dates (including for items and rowLayers); otherwise the type for dates is number |\n\n## Data\n| Name             |\n| ---------------- |\n| items            |\n| groups           |\n| selectedItems    |\n\n### Items\n\nRequired props:\n* key - number\n\n### Groups\n\nRequired props:\n* id - number - needs to be consecutive\n\n## Callbacks\n| Name              |\n| ----------------  |\n| onItemClick       |\n| onItemDoubleClick |\n| onItemContext     |\n| onInteraction     |\n| onRowClick        |\n| onRowContext      |\n| onRowDoubleClick  |\n| onItemHover       |\n| onItemLeave       |\n\n# Styling\n* View `src/style.css` for styling examples.\n* For the default styles, import `react-timeline-9000/lib/style.css`\n\n### Default Z-indexes\n| Item                                  | Index |\n| ------------------------------------- | ----- |\n| Row Layers                            | 1     |\n| Vertical markers                      | 2     |\n| Timeline items                        | 3     |\n| Timeline items when dragging/resizing | 4     |\n| Selection box (for multi-select)      | 5     |\n| Group column                          | 6     |\n\n",
    "longname": "/home/poweruser/git/react-timeline-10000/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@crispico/react-timeline-10000\",\n  \"version\": \"2.1.1\",\n  \"description\": \"Performance focused timeline for react\",\n  \"private\": false,\n  \"types\": \"./types/index.d.ts\",\n  \"scripts\": {\n    \"build\": \"yarn tsc && webpack --config webpack.prod.js\",\n    \"build_lib\": \"yarn tsc && babel src --out-dir lib -x '.js,.jsx,.mdx,.html,.tsx' --ignore **/demo.js,**/demo_index.js,**/demo.html,**/demo/,**/setupTests.js,**/*/*.test.js,**/stories/ --copy-files --source-maps inline --no-copy-ignored\",\n    \"build_demo\": \"webpack --config webpack.demo.prod.js\",\n    \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\n    \"docs\": \"esdoc && mv docs/index.html docs/index-docs.html\",\n    \"pretty\": \"prettier --write --tab-width 4 \\\"src/**/*.js\\\"\",\n    \"precommit\": \"lint-staged\",\n    \"storybook\": \"yarn tsc && start-storybook -p 6006\",\n    \"storybook-build\": \"yarn tsc && yarn docs && build-storybook\",\n    \"storybook-move\": \"rm -r ../flower-platform.github.io/foundation-react-gantt; mv storybook-static ../flower-platform.github.io/foundation-react-gantt\",\n    \"storybook-build-move\": \"yarn storybook-build && yarn storybook-move\",\n    \"tsc\": \"tsc -p tsconfig.ts-types-from-jsdoc.json && cp src/types.d.ts types/types.d.ts\"\n  },\n  \"lint-staged\": {\n    \"src/**/*.{js,jsx,json,css}\": [\n      \"prettier --single-quote --write\",\n      \"git add\"\n    ]\n  },\n  \"keywords\": [\n    \"react\",\n    \"timeline\"\n  ],\n  \"engines\": {\n    \"node\": \">=4.2.4\"\n  },\n  \"author\": \"Leighton Lilford\",\n  \"license\": \"MIT\",\n  \"files\": [\n    \"lib\",\n    \"types\"\n  ],\n  \"main\": \"lib/index.js\",\n  \"homepage\": \"https://github.com/flower-platform/react-timeline-10000\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.0.0\",\n    \"@famiprog-foundation/tests-are-demo\": \"^0.7.0\",\n    \"@storybook/addon-actions\": \"^6.3.11\",\n    \"@storybook/addon-essentials\": \"^6.3.11\",\n    \"@storybook/addon-links\": \"^6.3.11\",\n    \"@storybook/addon-storysource\": \"^6.5.12\",\n    \"@storybook/react\": \"^6.3.11\",\n    \"antd\": \"^3.6.5\",\n    \"babel-loader\": \"^8.2.5\",\n    \"chai\": \"^4.1.2\",\n    \"core-js\": \"^2.4.0\",\n    \"css-loader\": \"^0.28.11\",\n    \"enzyme\": \"^3.3.0\",\n    \"enzyme-adapter-react-16\": \"^1.1.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-inject-style-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.0.1\",\n    \"eslint-config-prettier\": \"^2.9.0\",\n    \"eslint-plugin-babel\": \"^5.1.0\",\n    \"eslint-plugin-import\": \"^2.12.0\",\n    \"eslint-plugin-prettier\": \"^2.6.0\",\n    \"eslint-plugin-react\": \"^7.10.0\",\n    \"html-webpack-plugin\": \"5.5.0\",\n    \"husky\": \"^0.14.3\",\n    \"ignore-styles\": \"^5.0.1\",\n    \"jsdom\": \"^16.5.0\",\n    \"lint-staged\": \"8.2.1\",\n    \"mocha\": \"^5.2.0\",\n    \"prettier\": \"^1.13.5\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"semantic-ui-css\": \"^2.5.0\",\n    \"semantic-ui-react\": \"^2.1.3\",\n    \"style-loader\": \"^0.21.0\",\n    \"tern\": \"^0.21.0\",\n    \"ts-loader\": \"^9.4.2\",\n    \"typescript\": \"~4.4.0\",\n    \"uglifyjs-webpack-plugin\": \"^2.2.0\",\n    \"webpack\": \"^5.67.0\",\n    \"webpack-cli\": \"^4.9.2\",\n    \"webpack-dev-server\": \"^4.7.3\",\n    \"webpack-merge\": \"^5.8.0\"\n  },\n  \"dependencies\": {\n    \"color\": \"^4.2.3\",\n    \"core-js\": \"^2.4.0\",\n    \"interactjs\": \"^1.6.2\",\n    \"lodash\": \"^4.17.19\",\n    \"moment\": \"^2.22.2\",\n    \"react-measure\": \"^2.5.2\",\n    \"react-virtualized\": \"^9.19.1\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^16.4.1 || ^17.0.0\",\n    \"react-dom\": \"^16.4.1 || ^17.0.0\"\n  }\n}\n",
    "longname": "/home/poweruser/git/react-timeline-10000/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]