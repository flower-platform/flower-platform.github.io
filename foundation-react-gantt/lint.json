[
  {
    "name": "Timebar#getPixelIncrement",
    "filePath": "src/components/timebar.js",
    "lines": [
      {
        "lineNumber": 108,
        "line": "  /**"
      },
      {
        "lineNumber": 109,
        "line": "   * Gets the number of pixels per segment of the timebar section (using the resolution)"
      },
      {
        "lineNumber": 110,
        "line": "   * @param {moment} date The date being rendered. This is used to figure out how many days are in the month"
      },
      {
        "lineNumber": 111,
        "line": "   * @param {string} resolutionType Timebar section resolution [Year; Month...]"
      },
      {
        "lineNumber": 112,
        "line": "   * @returns {number} The number of pixels per segment"
      },
      {
        "lineNumber": 113,
        "line": "   */"
      },
      {
        "lineNumber": 114,
        "line": "  getPixelIncrement(date, resolutionType, offset = 0) {"
      }
    ],
    "codeParams": [
      "date",
      "resolutionType",
      "offset"
    ],
    "docParams": [
      "date",
      "resolutionType"
    ]
  },
  {
    "name": "Timebar#renderColumnHeader",
    "filePath": "src/components/timebar.js",
    "lines": [
      {
        "lineNumber": 224,
        "line": "  /**"
      },
      {
        "lineNumber": 225,
        "line": "   * It renders the header of a column in multi columns mode. Default renderer: props.groupTitleRenderer;"
      },
      {
        "lineNumber": 226,
        "line": "   * which may be overriden per column: column.headerRender (react element or function)."
      },
      {
        "lineNumber": 227,
        "line": "   * @param {object} column"
      },
      {
        "lineNumber": 228,
        "line": "   */"
      },
      {
        "lineNumber": 229,
        "line": "  renderColumnHeader(column, index) {"
      }
    ],
    "codeParams": [
      "column",
      "index"
    ],
    "docParams": [
      "column"
    ]
  },
  {
    "name": "findAncestorWithClassName",
    "filePath": "src/utils/itemUtils.js",
    "lines": [
      {
        "lineNumber": 255,
        "line": "/**"
      },
      {
        "lineNumber": 256,
        "line": " * It finds the ancestor with the provided className of the element."
      },
      {
        "lineNumber": 257,
        "line": " * @param {Object} the DOM element"
      },
      {
        "lineNumber": 258,
        "line": " * @param {string} className"
      },
      {
        "lineNumber": 259,
        "line": " * @returns {Object} ancestor with className"
      },
      {
        "lineNumber": 260,
        "line": " */"
      },
      {
        "lineNumber": 261,
        "line": "export function findAncestorWithClassName(element, className) {"
      }
    ],
    "codeParams": [
      "element",
      "className"
    ],
    "docParams": [
      "the",
      "className"
    ]
  }
]