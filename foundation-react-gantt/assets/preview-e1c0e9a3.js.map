{"version":3,"file":"preview-e1c0e9a3.js","sources":["../../.storybook/preview.jsx"],"sourcesContent":["import \"semantic-ui-css/semantic.min.css\";\nimport { Label, Segment } from \"semantic-ui-react\";\n\nimport '../src/stories/storybook.css';\nimport '../../src/style.css';\n\nexport const parameters = {\n  // actions: { argTypesRegex: \"^on[A-Z].*\" },\n  previewTabs: {\n    'storybook/docs/panel': { hidden: true }\n  },\n  viewMode: 'story',\n  controls: {\n    disable: true,\n    // matchers: {\n    //   color: /(background|color)$/i,\n    //   date: /Date$/,\n    // },\n  },\n  actions: {\n    disable: true\n  },\n  options: {\n    storySort: {\n      method: 'configure',\n      includeNames: true,\n      order: [\n        'Features',\n        ['Basic', 'Item Renderer', 'Background Layer', '*']\n      ]\n    }\n  }\n}\n\nexport const decorators = [\n  (Story, context) => <>\n    {context.parameters.scenarios && <ScenariosList scenarios={context.parameters.scenarios} />}\n    <div className=\"demo\">\n      <Story />\n    </div>\n  </>\n];\n\nconst ScenariosList = (props) => <Segment>\n  Illustrated scenarios: &nbsp;\n  {props.scenarios.map((scenario, i) => <Label key={i} color=\"blue\">{scenario}</Label>)}\n</Segment>"],"names":["parameters","decorators","Story","context","jsxs","Fragment","jsx","ScenariosList","props","Segment","scenario","i","Label"],"mappings":"8JAMO,MAAMA,EAAa,CAExB,YAAa,CACX,uBAAwB,CAAE,OAAQ,EAAK,CACzC,EACA,SAAU,QACV,SAAU,CACR,QAAS,EAKX,EACA,QAAS,CACP,QAAS,EACX,EACA,QAAS,CACP,UAAW,CACT,OAAQ,YACR,aAAc,GACd,MAAO,CACL,WACA,CAAC,QAAS,gBAAiB,mBAAoB,GAAG,CACpD,CACF,CACF,CACF,EAEaC,EAAa,CACxB,CAACC,EAAOC,IACLC,EAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAF,EAAQ,WAAW,WAAaG,MAACC,GAAc,UAAWJ,EAAQ,WAAW,UAAW,QACxF,MAAI,CAAA,UAAU,OACb,SAAAG,MAACJ,GAAM,CAAA,EACT,CAAA,EACF,CACF,EAEMK,EAAiBC,GAAUJ,EAAA,KAACK,EAAQ,CAAA,SAAA,CAAA,2BAEvCD,EAAM,UAAU,IAAI,CAACE,EAAUC,IAAOL,EAAA,IAAAM,EAAA,CAAc,MAAM,OAAQ,SAAjBF,CAAA,EAAAC,CAA0B,CAAQ,CAAA,EACtF"}