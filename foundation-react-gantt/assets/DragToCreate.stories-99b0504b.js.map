{"version":3,"file":"DragToCreate.stories-99b0504b.js","sources":["../../../node_modules/semantic-ui-react/dist/es/addons/Radio/Radio.js","../../../node_modules/semantic-ui-react/dist/es/addons/Select/Select.js","../../../node_modules/semantic-ui-react/dist/es/addons/TextArea/TextArea.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormField.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormButton.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormCheckbox.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormDropdown.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormGroup.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormInput.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormRadio.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormSelect.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/FormTextArea.js","../../../node_modules/semantic-ui-react/dist/es/collections/Form/Form.js","../../src/stories/dragToCreate/DragToCreateScenarios.ts"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\n\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n  var rest = getUnhandledProps(Radio, props); // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n\n  var radio = !(slider || toggle) || undefined;\n  return /*#__PURE__*/React.createElement(Checkbox, _extends({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\n\nRadio.handledProps = [\"slider\", \"toggle\", \"type\"];\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: Checkbox.propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: Checkbox.propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: Checkbox.propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nexport default Radio;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Dropdown from '../../modules/Dropdown';\n/**\n * A Select is sugar for <Dropdown selection />.\n * @see Dropdown\n * @see Form\n */\n\nfunction Select(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({}, props, {\n    selection: true\n  }));\n}\n\nSelect.handledProps = [\"options\"];\nSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: PropTypes.arrayOf(PropTypes.shape(Dropdown.Item.propTypes)).isRequired\n} : {};\nSelect.Divider = Dropdown.Divider;\nSelect.Header = Dropdown.Header;\nSelect.Item = Dropdown.Item;\nSelect.Menu = Dropdown.Menu;\nexport default Select;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A TextArea can be used to allow for extended user input.\n * @see Form\n */\n\nvar TextArea = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextArea, _Component);\n\n  function TextArea() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.ref = /*#__PURE__*/createRef();\n\n    _this.focus = function () {\n      return _this.ref.current.focus();\n    };\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    _this.handleInput = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onInput', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    return _this;\n  }\n\n  var _proto = TextArea.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        rows = _this$props.rows,\n        value = _this$props.value;\n    var rest = getUnhandledProps(TextArea, this.props);\n    var ElementType = getElementType(TextArea, this.props);\n    return /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.ref\n    }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      onChange: this.handleChange,\n      onInput: this.handleInput,\n      rows: rows,\n      value: value\n    })));\n  };\n\n  return TextArea;\n}(Component);\n\nTextArea.handledProps = [\"as\", \"onChange\", \"onInput\", \"rows\", \"value\"];\nTextArea.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /**\n   * Called on change.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called on input.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onInput: PropTypes.func,\n\n  /** Indicates row count for a TextArea. */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The value of the textarea. */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nTextArea.defaultProps = {\n  as: 'textarea',\n  rows: 3\n};\nexport default TextArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isNil from \"lodash-es/isNil\";\nimport _get from \"lodash-es/get\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Label from '../../elements/Label';\nimport Checkbox from '../../modules/Checkbox';\nimport Radio from '../../addons/Radio';\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nfunction FormField(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      control = props.control,\n      disabled = props.disabled,\n      error = props.error,\n      inline = props.inline,\n      label = props.label,\n      required = props.required,\n      type = props.type,\n      width = props.width,\n      id = props.id;\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\n  var rest = getUnhandledProps(FormField, props);\n  var ElementType = getElementType(FormField, props);\n\n  var errorPointing = _get(error, 'pointing', 'above');\n\n  var errorLabel = Label.create(error, {\n    autoGenerateKey: false,\n    defaultProps: {\n      prompt: true,\n      pointing: errorPointing,\n      id: id ? id + \"-error-message\" : undefined,\n      role: 'alert',\n      'aria-atomic': true\n    }\n  });\n  var errorLabelBefore = (errorPointing === 'below' || errorPointing === 'right') && errorLabel;\n  var errorLabelAfter = (errorPointing === 'above' || errorPointing === 'left') && errorLabel; // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_isNil(control)) {\n    if (_isNil(label)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        id: id\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      id: id\n    }), errorLabelBefore, createHTMLLabel(label, {\n      autoGenerateKey: false\n    }), errorLabelAfter);\n  } // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n\n\n  var ariaDescribedBy = id && error ? id + \"-error-message\" : null;\n  var ariaAttrs = {\n    'aria-describedby': ariaDescribedBy,\n    'aria-invalid': error ? true : undefined\n  };\n\n  var controlProps = _extends({}, rest, {\n    content: content,\n    children: children,\n    disabled: disabled,\n    required: required,\n    type: type,\n    id: id\n  }); // wrap HTML checkboxes/radios in the label\n\n\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return /*#__PURE__*/React.createElement(ElementType, {\n      className: classes\n    }, /*#__PURE__*/React.createElement(\"label\", null, errorLabelBefore, /*#__PURE__*/createElement(control, _extends({}, ariaAttrs, controlProps)), \" \", label, errorLabelAfter));\n  } // pass label prop to controls that support it\n\n\n  if (control === Checkbox || control === Radio) {\n    return /*#__PURE__*/React.createElement(ElementType, {\n      className: classes\n    }, errorLabelBefore, /*#__PURE__*/createElement(control, _extends({}, ariaAttrs, controlProps, {\n      label: label\n    })), errorLabelAfter);\n  } // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n\n  return /*#__PURE__*/React.createElement(ElementType, {\n    className: classes\n  }, createHTMLLabel(label, {\n    defaultProps: {\n      htmlFor: id\n    },\n    autoGenerateKey: false\n  }), errorLabelBefore, /*#__PURE__*/createElement(control, _extends({}, ariaAttrs, controlProps)), errorLabelAfter);\n}\n\nFormField.handledProps = [\"as\", \"children\", \"className\", \"content\", \"control\", \"disabled\", \"error\", \"id\", \"inline\", \"label\", \"required\", \"type\", \"width\"];\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\n\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Individual fields may display an error state along with a message. */\n  error: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** The id of the control */\n  id: PropTypes.string,\n\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([customPropTypes.demand(['control']) // don't strictly validate HTML types\n  // a control might be passed that uses a `type` prop with unknown values\n  // let the control validate if for us\n  ]),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default FormField;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Button from '../../elements/Button';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\n\nfunction FormButton(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormButton, props);\n  var ElementType = getElementType(FormButton, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormButton.handledProps = [\"as\", \"control\"];\nFormButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormButton.defaultProps = {\n  as: FormField,\n  control: Button\n};\nexport default FormButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Checkbox} />.\n * @see Checkbox\n * @see Form\n */\n\nfunction FormCheckbox(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormCheckbox, props);\n  var ElementType = getElementType(FormCheckbox, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormCheckbox.handledProps = [\"as\", \"control\"];\nFormCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormCheckbox.defaultProps = {\n  as: FormField,\n  control: Checkbox\n};\nexport default FormCheckbox;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Dropdown} />.\n * @see Dropdown\n * @see Form\n */\n\nfunction FormDropdown(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormDropdown, props);\n  var ElementType = getElementType(FormDropdown, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormDropdown.handledProps = [\"as\", \"control\"];\nFormDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormDropdown.defaultProps = {\n  as: FormField,\n  control: Dropdown\n};\nexport default FormDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\n/**\n * A set of fields can appear grouped together.\n * @see Form\n */\n\nfunction FormGroup(props) {\n  var children = props.children,\n      className = props.className,\n      grouped = props.grouped,\n      inline = props.inline,\n      unstackable = props.unstackable,\n      widths = props.widths;\n  var classes = cx(useKeyOnly(grouped, 'grouped'), useKeyOnly(inline, 'inline'), useKeyOnly(unstackable, 'unstackable'), useWidthProp(widths, null, true), 'fields', className);\n  var rest = getUnhandledProps(FormGroup, props);\n  var ElementType = getElementType(FormGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nFormGroup.handledProps = [\"as\", \"children\", \"className\", \"grouped\", \"inline\", \"unstackable\", \"widths\"];\nFormGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Fields can show related choices. */\n  grouped: customPropTypes.every([customPropTypes.disallow(['inline']), PropTypes.bool]),\n\n  /** Multiple fields may be inline in a row. */\n  inline: customPropTypes.every([customPropTypes.disallow(['grouped']), PropTypes.bool]),\n\n  /** A form group can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal']))\n} : {};\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Input from '../../elements/Input';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Input} />.\n * @see Form\n * @see Input\n */\n\nfunction FormInput(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormInput, props);\n  var ElementType = getElementType(FormInput, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormInput.handledProps = [\"as\", \"control\"];\nFormInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormInput.defaultProps = {\n  as: FormField,\n  control: Input\n};\nexport default FormInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Radio from '../../addons/Radio';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Radio} />.\n * @see Form\n * @see Radio\n */\n\nfunction FormRadio(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormRadio, props);\n  var ElementType = getElementType(FormRadio, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormRadio.handledProps = [\"as\", \"control\"];\nFormRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormRadio.defaultProps = {\n  as: FormField,\n  control: Radio\n};\nexport default FormRadio;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Select from '../../addons/Select';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Select} />.\n * @see Form\n * @see Select\n */\n\nfunction FormSelect(props) {\n  var control = props.control,\n      options = props.options;\n  var rest = getUnhandledProps(FormSelect, props);\n  var ElementType = getElementType(FormSelect, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control,\n    options: options\n  }));\n}\n\nFormSelect.handledProps = [\"as\", \"control\", \"options\"];\nFormSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: PropTypes.arrayOf(PropTypes.shape(Dropdown.Item.propTypes)).isRequired\n} : {};\nFormSelect.defaultProps = {\n  as: FormField,\n  control: Select\n};\nexport default FormSelect;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport TextArea from '../../addons/TextArea';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={TextArea} />.\n * @see Form\n * @see TextArea\n */\n\nfunction FormTextArea(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormTextArea, props);\n  var ElementType = getElementType(FormTextArea, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormTextArea.handledProps = [\"as\", \"control\"];\nFormTextArea.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormTextArea.defaultProps = {\n  as: FormField,\n  control: TextArea\n};\nexport default FormTextArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _without from \"lodash-es/without\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport FormButton from './FormButton';\nimport FormCheckbox from './FormCheckbox';\nimport FormDropdown from './FormDropdown';\nimport FormField from './FormField';\nimport FormGroup from './FormGroup';\nimport FormInput from './FormInput';\nimport FormRadio from './FormRadio';\nimport FormSelect from './FormSelect';\nimport FormTextArea from './FormTextArea';\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n\n    _this.handleSubmit = function (e) {\n      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n      // method.\n\n      if (typeof action !== 'string') _invoke(e, 'preventDefault');\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));\n    };\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        action = _this$props.action,\n        children = _this$props.children,\n        className = _this$props.className,\n        error = _this$props.error,\n        inverted = _this$props.inverted,\n        loading = _this$props.loading,\n        reply = _this$props.reply,\n        size = _this$props.size,\n        success = _this$props.success,\n        unstackable = _this$props.unstackable,\n        warning = _this$props.warning,\n        widths = _this$props.widths;\n    var classes = cx('ui', size, useKeyOnly(error, 'error'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(reply, 'reply'), useKeyOnly(success, 'success'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(warning, 'warning'), useWidthProp(widths, null, true), 'form', className);\n    var rest = getUnhandledProps(Form, this.props);\n    var ElementType = getElementType(Form, this.props);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      action: action,\n      className: classes,\n      onSubmit: this.handleSubmit\n    }), children);\n  };\n\n  return Form;\n}(Component);\n\nForm.handledProps = [\"action\", \"as\", \"children\", \"className\", \"error\", \"inverted\", \"loading\", \"onSubmit\", \"reply\", \"size\", \"success\", \"unstackable\", \"warning\", \"widths\"];\nForm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** The HTML form action */\n  action: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Automatically show any error Message children. */\n  error: PropTypes.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** The HTML form submit handler. */\n  onSubmit: PropTypes.func,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: PropTypes.bool,\n\n  /** A form can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: PropTypes.bool,\n\n  /** A form can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Automatically show any warning Message children. */\n  warning: PropTypes.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(['equal'])\n} : {};\nForm.defaultProps = {\n  as: 'form'\n};\nForm.Field = FormField;\nForm.Button = FormButton;\nForm.Checkbox = FormCheckbox;\nForm.Dropdown = FormDropdown;\nForm.Group = FormGroup;\nForm.Input = FormInput;\nForm.Radio = FormRadio;\nForm.Select = FormSelect;\nForm.TextArea = FormTextArea;\nexport default Form;","export const dragToCreateScenarios = {\n  whenClickMenuButton: \"WHEN click on the menu button, THEN the menu opens\",\n  whenClickAddMenuEntry: \"WHEN click on the 'Add (drag to create)' menu entry, THEN the Gantt goes into the 'drag to create mode'\",\n  givenDragToCreateModeWhenClickCancelFromMenu: \"GIVEN drag to create mode, WHEN click on cancel (from the menu), THEN mode is cancelled\",\n  givenDragToCreateModeWhenClickCancelFromPopup: \"GIVEN drag to create mode, WHEN click on cancel (from the popup), THEN mode is cancelled\",\n  givenDragToCreateModeWhenClickAndDrag: \"GIVEN drag to create mode, WHEN click and drag, THEN a green selection rectangle appears\",\n  givenDragToCreateModeInProgressWhenRightClick: \"GIVEN drag to create in progress, WHEN right click, THEN cancel\",\n  givenDragToCreateModeInProgressWhenMouseUp: \"GIVEN drag to create in progress, WHEN mouse up, THEN handler is called\"\n};\n"],"names":["Radio","props","slider","toggle","type","rest","getUnhandledProps","radio","React","Checkbox","_extends","Select","Dropdown","TextArea","_Component","_inheritsLoose","_this","_len","args","_key","createRef","e","value","_get","_invoke","_proto","_this$props","rows","ElementType","getElementType","Ref","Component","TextArea$1","FormField","children","className","content","control","disabled","error","inline","label","required","width","id","classes","cx","useKeyOnly","useWidthProp","errorPointing","errorLabel","Label","errorLabelBefore","errorLabelAfter","_isNil","childrenUtils.isNil","createHTMLLabel","ariaDescribedBy","ariaAttrs","controlProps","createElement","FormButton","Button","FormCheckbox","FormDropdown","FormGroup","grouped","unstackable","widths","FormInput","Input","FormRadio","FormSelect","options","FormTextArea","Form","_args","action","_len2","_key2","inverted","loading","reply","size","success","warning","Form$1","dragToCreateScenarios"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}