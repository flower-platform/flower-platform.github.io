import{j as e}from"./jsx-runtime-b3cc59b7.js";import{T as y,M as o}from"./timeline-f7939cca.js";import{B as C,H as d}from"./BackgroundLayer-eefef92a.js";import{b as t,c as M,e as p,m as s}from"./sampleData-ca030df0.js";import{m as a}from"./main-c36d81bb.js";import"./shim-e439b993.js";import"./Scrollbar-5e9a6ca6.js";import"./inheritsLoose-b7013776.js";import"./Segment-1ca6e48e.js";import"./iframe-d891a21f.js";import"../sb-preview/runtime.js";import"./util-fea827ce.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./moment-e9e012b5.js";const r={highlightWeekends:"PROPERTY highlightWeekends",highlightWeekendsClassName:"PROPERTY highlightWeekendsClassName",nowMarker:"PROPERTY nowMarker",nowMarkerClassName:"PROPERTY nowMarkerClassName",verticalGrid:"PROPERTY verticalGrid",verticalGridClassName:"PROPERTY verticalGridClassName",markers:"PROPERTY markers",highlightedIntervals:"PROPERTY highlightedIntervals",highlightedIntervalClassName:"PROPERTY className FOR HighlightedInterval",classNameForMarker:"PROPERTY className FOR Marker"},G={title:"Features/Background Layer"},w=[{key:11,row:1,title:"Task JD1",start:t(20,8),end:t(28,11)},{key:12,row:3,title:"Task KP1",start:t(3,0),end:t(6,23)},{key:13,row:3,title:"Task KP2",start:t(11,18),end:t(18,19)}],n=()=>e.jsx(y,{startDate:M(),endDate:p(),groups:s,items:w,table:e.jsx(a.Table,{width:100,children:e.jsx(a.Column,{columnKey:"title",width:100,header:e.jsx(a.DataCell,{children:"Title"}),cell:({rowIndex:l})=>e.jsx(a.DataCell,{children:l<s.length?s[l].title:""})})}),backgroundLayer:e.jsx(C,{verticalGrid:!0,nowMarker:!0,highlightWeekends:!0,highlightedIntervals:[e.jsx(d,{start:t(15),end:t(18)}),e.jsx(d,{start:t(20,19),end:t(21,10)})],markers:[e.jsx(o,{date:t(10,12)}),e.jsx(o,{date:t(15,12)})]})});n.parameters={scenarios:[r.verticalGrid,r.nowMarker,r.highlightWeekends,r.markers,r.highlightedIntervals]};const i=()=>e.jsx(y,{startDate:M(),endDate:p(),groups:s,items:w,table:e.jsx(a.Table,{width:100,children:e.jsx(a.Column,{columnKey:"title",width:100,header:e.jsx(a.DataCell,{children:"Title"}),cell:({rowIndex:l})=>e.jsx(a.DataCell,{children:l<s.length?s[l].title:""})})}),backgroundLayer:e.jsx(C,{verticalGrid:!0,verticalGridClassName:"story-custom-vertical-grid-class",verticalGridStyle:{opacity:.5},nowMarker:!0,nowMarkerClassName:"story-custom-now-marker-class",nowMarkerStyle:{opacity:.7},highlightWeekends:!0,highlightWeekendsClassName:"story-custom-highlighted-weekends-class",highlightWeekendsStyle:{opacity:.8},highlightedIntervals:[e.jsx(d,{className:"story-custom-highlighted-interval-class",style:{background:"#f6bea3"},start:t(15),end:t(18)}),e.jsx(d,{className:"story-custom-highlighted-interval-class",style:{background:"#f6bea3"},start:t(20,19),end:t(21,10)})],markers:[e.jsx(o,{className:"story-custom-marker-class",style:{width:"2px"},date:t(10,12)}),e.jsx(o,{className:"story-custom-marker-class",style:{width:"2px"},date:t(15,12)})]})});i.parameters={scenarios:[r.verticalGridClassName,r.nowMarkerClassName,r.highlightWeekendsClassName,r.classNameForMarker,r.highlightedIntervalClassName]};var h,m,c;n.parameters={...n.parameters,docs:{...(h=n.parameters)==null?void 0:h.docs,source:{originalSource:`() => {
  return <Timeline startDate={startOfCurrentMonth()} endDate={endOfCurrentMonth()} groups={manyHumanResources} items={tasks} table={<Table width={100}>
                <Column columnKey="title" width={100} header={<DataCell>Title</DataCell>} cell={({
      rowIndex
    }) => <DataCell>{rowIndex < manyHumanResources.length ? manyHumanResources[rowIndex].title : ""}</DataCell>} />
            </Table>} backgroundLayer={<BackgroundLayer verticalGrid nowMarker highlightWeekends highlightedIntervals={[<HighlightedInterval start={dateAndHourOfCurrentMonth(15)} end={dateAndHourOfCurrentMonth(18)} />, <HighlightedInterval start={dateAndHourOfCurrentMonth(20, 19)} end={dateAndHourOfCurrentMonth(21, 10)} />]} markers={[<Marker date={dateAndHourOfCurrentMonth(10, 12)} />, <Marker date={dateAndHourOfCurrentMonth(15, 12)} />]} />} />;
}`,...(c=(m=n.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};var u,g,k;i.parameters={...i.parameters,docs:{...(u=i.parameters)==null?void 0:u.docs,source:{originalSource:`() => {
  return <Timeline startDate={startOfCurrentMonth()} endDate={endOfCurrentMonth()} groups={manyHumanResources} items={tasks} table={<Table width={100}>
                <Column columnKey="title" width={100} header={<DataCell>Title</DataCell>} cell={({
      rowIndex
    }) => <DataCell>{rowIndex < manyHumanResources.length ? manyHumanResources[rowIndex].title : ""}</DataCell>} />
            </Table>} backgroundLayer={<BackgroundLayer verticalGrid verticalGridClassName='story-custom-vertical-grid-class' verticalGridStyle={{
    opacity: 0.5
  }} nowMarker nowMarkerClassName='story-custom-now-marker-class' nowMarkerStyle={{
    opacity: 0.7
  }} highlightWeekends highlightWeekendsClassName='story-custom-highlighted-weekends-class' highlightWeekendsStyle={{
    opacity: 0.8
  }} highlightedIntervals={[<HighlightedInterval className='story-custom-highlighted-interval-class' style={{
    background: '#f6bea3'
  }} start={dateAndHourOfCurrentMonth(15)} end={dateAndHourOfCurrentMonth(18)} />, <HighlightedInterval className='story-custom-highlighted-interval-class' style={{
    background: '#f6bea3'
  }} start={dateAndHourOfCurrentMonth(20, 19)} end={dateAndHourOfCurrentMonth(21, 10)} />]} markers={[<Marker className='story-custom-marker-class' style={{
    width: '2px'
  }} date={dateAndHourOfCurrentMonth(10, 12)} />, <Marker className='story-custom-marker-class' style={{
    width: '2px'
  }} date={dateAndHourOfCurrentMonth(15, 12)} />]} />} />;
}`,...(k=(g=i.parameters)==null?void 0:g.docs)==null?void 0:k.source}}};const W=["Main","CustomClassNamesAndStyles"];export{i as CustomClassNamesAndStyles,n as Main,W as __namedExportsOrder,G as default};
//# sourceMappingURL=BackgroundLayer.stories-40043b5a.js.map
