"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[730],{876:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>h});var n=o(2784);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(o),h=r,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||a;return o?n.createElement(m,s(s({ref:t},d),{},{components:o})):n.createElement(m,s({ref:t},d))}));function h(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,s=new Array(a);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=o[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},8104:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=o(8427),r=(o(2784),o(876));const a={sidebar_position:20},s="Use cases",i={unversionedId:"feature-book/use-cases",id:"feature-book/use-cases",title:"Use cases",description:"Some are implemented. Others will be. And others are ideas (good or not so good) and/or thoughts.",source:"@site/docs/feature-book/use-cases.md",sourceDirName:"feature-book",slug:"/feature-book/use-cases",permalink:"/site/docs/feature-book/use-cases",draft:!1,editUrl:"https://gitlab.xops-online.com/foundation/foundation-jhipster-gwt/-/blob/master/foundation-react/packages/site/docs/feature-book/use-cases.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Demo",permalink:"/site/docs/feature-book/demo"},next:{title:"Writing scenarios",permalink:"/site/docs/feature-book/writing-scenarios"}},l={},c=[{value:"Inspiration on how to write scenarios",id:"inspiration-on-how-to-write-scenarios",level:2},{value:"Collaboration on scenarios",id:"collaboration-on-scenarios",level:2},{value:"Annotations in Java",id:"annotations-in-java",level:2},{value:"Bi-directional navigation to/from tests",id:"bi-directional-navigation-tofrom-tests",level:2},{value:"Keep track of code smells",id:"keep-track-of-code-smells",level:2}],d={toc:c};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-cases"},"Use cases"),(0,r.kt)("p",null,"Some are implemented. Others will be. And others are ideas (good or not so good) and/or thoughts."),(0,r.kt)("h2",{id:"inspiration-on-how-to-write-scenarios"},"Inspiration on how to write scenarios"),(0,r.kt)("p",null,"If the scenarios are too short => it's not good. If the scenarios are too long => it's not good. There is a sweet spot. And the fastest way to feel it, is by inspiring from existing work."),(0,r.kt)("p",null,"Browsing Features in the code base/Git is doable. But the process is not smooth, and this encourages people to avoid to use it. This issue is solved with the UI, which groups all the features, and makes it easy for the devs to quickly browse and draw inspiration."),(0,r.kt)("h2",{id:"collaboration-on-scenarios"},"Collaboration on scenarios"),(0,r.kt)("p",null,"This is a non-goal. When 2 or more people discuss around scenarios, they should look at the files either from the IDE or from the Git UI. The reason: to be able to quickly edit. In our experience, many of the discussions result in (bigger or smaller) changes."),(0,r.kt)("h2",{id:"annotations-in-java"},"Annotations in Java"),(0,r.kt)("p",null,"The annotations are designed to look similar in Java as well. A Spring controller will be implemented that would feed the UI w/ scenarios from Java."),(0,r.kt)("h2",{id:"bi-directional-navigation-tofrom-tests"},"Bi-directional navigation to/from tests"),(0,r.kt)("p",null,"Ideally each scenario should be involved in one or more tests. We'd like to be able to click on a scenario and jump to (and run) the corresponding Tests Are Demo test. And vice versa."),(0,r.kt)("p",null,'Colored labels would help us keep track of what\'s tested already or todo. E.g. "has test", "no test", "not testable".'),(0,r.kt)("h2",{id:"keep-track-of-code-smells"},"Keep track of code smells"),(0,r.kt)("p",null,"Additional annotations could help us document code smells directly where we see them in the code. In JS, when the classes are loaded, the annotations (decorators) are invoked; so this way we can easily group them by Feature. In Java, the process would need a classpath scan. Class by class, method by method. Not super fast, so we need to save the result in a file."),(0,r.kt)("p",null,"We may have tags such as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"@prio1 bla bla\n@prio value=high bla bla\n@code-smell type=copied/pasted code\n")),(0,r.kt)("p",null,"Or we may use types. E.g. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'@FeatureBook.comment(codeSmell(CodeSmell.copyPaste) + "")\n')),(0,r.kt)("p",null,"Or even w/ new decorators that take directly an enum (for tag)."),(0,r.kt)("p",null,"We may add search/filter/sort capabilities in the UI."))}u.isMDXComponent=!0}}]);